{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\EditablePage\\\\EditablePage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport Select from 'react-select';\nimport useUnsavedChangesWarning from \"../../hooks/useUnsavedChangesWarning\";\nimport \"./EditablePage.css\";\nexport default function EditablePage() {\n  _s();\n\n  const history = useHistory();\n  const [Prompt, setDirty] = useUnsavedChangesWarning();\n  const [publishstatus, GetPublishStatus] = useState('');\n  const [title, GetTitle] = useState('');\n  const [content, GetContent] = useState('');\n  const [location, GetLocation] = useState('');\n  const [timer, GetTimer] = useState('0');\n  const [Tag, GetTag] = useState([]);\n  const editorConfiguration = {\n    placeholder: \"Type your confession here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === false) {\n        history.push(\"/\");\n      }\n    });\n  }, []); // remove the , [] later on \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EditablePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable Text Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This text page should be editable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditablePage, \"rFZMlvLEZD/etwwSrnmngTW6Oos=\", false, function () {\n  return [useHistory, useUnsavedChangesWarning];\n});\n\n_c = EditablePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditablePage\");","map":{"version":3,"sources":["D:/ConHut/frontend/src/pages/EditablePage/EditablePage.js"],"names":["React","useState","useEffect","useHistory","Axios","CKEditor","Editor","Select","useUnsavedChangesWarning","EditablePage","history","Prompt","setDirty","publishstatus","GetPublishStatus","title","GetTitle","content","GetContent","location","GetLocation","timer","GetTimer","Tag","GetTag","editorConfiguration","placeholder","toolbar","get","then","result","data","loggedIn","push"],"mappings":";;;;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,wBAAP,MAAqC,sCAArC;AAEA,OAAO,oBAAP;AAEA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAClC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,MAAD,EAASC,QAAT,IAAqBJ,wBAAwB,EAAnD;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACsB,GAAD,EAAMC,MAAN,IAAgBvB,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMwB,mBAAmB,GAAG;AACxBC,IAAAA,WAAW,EAAE,8BADW;AAExBC,IAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;AAFe,GAA5B;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACwB,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAoDC,MAAD,IAAY;AAC3D,UAAIA,MAAM,CAACC,IAAP,CAAYC,QAAZ,KAAyB,KAA7B,EAAoC;AAChCtB,QAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACH;AACJ,KAJD;AAMH,GAPQ,EAON,EAPM,CAAT,CAhBkC,CAuB1B;;AAER,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA/BuBxB,Y;UACJN,U,EACWK,wB;;;KAFPC,Y","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport useUnsavedChangesWarning from \"../../hooks/useUnsavedChangesWarning\";\r\n\r\nimport \"./EditablePage.css\"\r\n\r\nexport default function EditablePage(){\r\n    const history = useHistory();\r\n    const [Prompt, setDirty] = useUnsavedChangesWarning();\r\n    const [publishstatus, GetPublishStatus] = useState('')\r\n\r\n    const [title, GetTitle] = useState('')\r\n    const [content, GetContent] = useState('')\r\n    const [location, GetLocation] = useState('')\r\n    const [timer, GetTimer] = useState('0')\r\n    const [Tag, GetTag] = useState([])\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your confession here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === false) {\r\n                history.push(\"/\")\r\n            } \r\n        });\r\n\r\n    }, []); // remove the , [] later on \r\n\r\n    return (\r\n        <div className=\"EditablePage\">\r\n            <h2>Editable Text Page</h2>\r\n            <p>This text page should be editable</p>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}