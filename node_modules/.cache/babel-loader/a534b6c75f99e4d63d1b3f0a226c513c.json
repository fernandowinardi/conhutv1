{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\EditablePage\\\\EditablePage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport Select from 'react-select';\nimport useUnsavedChangesWarning from \"../../hooks/useUnsavedChangesWarning\";\nimport \"./EditablePage.css\";\nexport default function EditablePage() {\n  _s();\n\n  const history = useHistory();\n  const [Prompt, setDirty] = useUnsavedChangesWarning();\n  const [publishstatus, GetPublishStatus] = useState('');\n  const [title, GetTitle] = useState('');\n  const [content, GetContent] = useState('');\n  const [location, GetLocation] = useState('');\n  const [timer, GetTimer] = useState('0');\n  const [Tag, GetTag] = useState([]);\n  const editorConfiguration = {\n    placeholder: \"Type your confession here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === false) {\n        history.push(\"/\");\n      }\n    });\n  }, []); // remove the , [] later on \n\n  const createconfession = () => {\n    Axios.post(\"http://localhost:3001/createconfession\", {});\n    GetCreate(true);\n  };\n\n  const savetoDraft = () => {\n    Axios.post(\"http://localhost:3001/updateconfession/draft\", {\n      location: location,\n      content: content,\n      title: title\n    }).then(response => {\n      if (response.data.message) {\n        GetPublishStatus(response.data.message);\n      }\n    });\n  };\n\n  const publishConfession = () => {\n    let usertimer = 0;\n    var tagarray = [];\n\n    if (timer.value !== undefined) {\n      usertimer = timer.value;\n    }\n\n    for (var i = 0; i < Tag.length; i++) {\n      delete Tag[i].label;\n      tagarray.push(Tag[i].value);\n    }\n\n    Axios.post(\"http://localhost:3001/updateconfession/publish\", {\n      location: location,\n      content: content,\n      title: title,\n      timer: usertimer,\n      tag: tagarray\n    }).then(response => {\n      if (response.data.message) {\n        GetPublishStatus(response.data.message);\n      }\n    });\n  };\n\n  const TimerOption = [{\n    value: '12',\n    label: 'Half Day'\n  }, {\n    value: '24',\n    label: 'One Day'\n  }, {\n    value: '48',\n    label: 'Two Days'\n  }, {\n    value: '72',\n    label: 'Three Days'\n  }, {\n    value: '0',\n    label: 'Permanent'\n  }];\n  const TagOption = [{\n    value: 'relationship',\n    label: 'Relationship'\n  }, {\n    value: 'thief',\n    label: 'Thief'\n  }, {\n    value: 'sabotage',\n    label: 'Sabotage'\n  }, {\n    value: 'karma',\n    label: 'Karma'\n  }, {\n    value: 'bday',\n    label: 'Birthday'\n  }, {\n    value: 'eventruin',\n    label: 'Event Ruiner'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EditablePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable Text Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This text page should be editable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditablePage, \"rFZMlvLEZD/etwwSrnmngTW6Oos=\", false, function () {\n  return [useHistory, useUnsavedChangesWarning];\n});\n\n_c = EditablePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditablePage\");","map":{"version":3,"sources":["D:/ConHut/frontend/src/pages/EditablePage/EditablePage.js"],"names":["React","useState","useEffect","useHistory","Axios","CKEditor","Editor","Select","useUnsavedChangesWarning","EditablePage","history","Prompt","setDirty","publishstatus","GetPublishStatus","title","GetTitle","content","GetContent","location","GetLocation","timer","GetTimer","Tag","GetTag","editorConfiguration","placeholder","toolbar","get","then","result","data","loggedIn","push","createconfession","post","GetCreate","savetoDraft","response","message","publishConfession","usertimer","tagarray","value","undefined","i","length","label","tag","TimerOption","TagOption"],"mappings":";;;;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,wBAAP,MAAqC,sCAArC;AAEA,OAAO,oBAAP;AAEA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAClC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,MAAD,EAASC,QAAT,IAAqBJ,wBAAwB,EAAnD;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACsB,GAAD,EAAMC,MAAN,IAAgBvB,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMwB,mBAAmB,GAAG;AACxBC,IAAAA,WAAW,EAAE,8BADW;AAExBC,IAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;AAFe,GAA5B;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACwB,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAoDC,MAAD,IAAY;AAC3D,UAAIA,MAAM,CAACC,IAAP,CAAYC,QAAZ,KAAyB,KAA7B,EAAoC;AAChCtB,QAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACH;AACJ,KAJD;AAMH,GAPQ,EAON,EAPM,CAAT,CAhBkC,CAuB1B;;AAER,QAAMC,gBAAgB,GAAG,MAAM;AAC3B9B,IAAAA,KAAK,CAAC+B,IAAN,CAAW,wCAAX,EAAqD,EAArD;AAEAC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACtBjC,IAAAA,KAAK,CAAC+B,IAAN,CAAW,8CAAX,EAA2D;AACvDhB,MAAAA,QAAQ,EAAEA,QAD6C;AAEvDF,MAAAA,OAAO,EAAEA,OAF8C;AAGvDF,MAAAA,KAAK,EAAEA;AAHgD,KAA3D,EAIGc,IAJH,CAISS,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACP,IAAT,CAAcQ,OAAlB,EAA2B;AACvBzB,QAAAA,gBAAgB,CAACwB,QAAQ,CAACP,IAAT,CAAcQ,OAAf,CAAhB;AACH;AACJ,KARD;AASH,GAVD;;AAYA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIrB,KAAK,CAACsB,KAAN,KAAgBC,SAApB,EAA+B;AAC3BH,MAAAA,SAAS,GAAGpB,KAAK,CAACsB,KAAlB;AACH;;AAED,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACuB,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,aAAOtB,GAAG,CAACsB,CAAD,CAAH,CAAOE,KAAd;AACAL,MAAAA,QAAQ,CAACT,IAAT,CAAcV,GAAG,CAACsB,CAAD,CAAH,CAAOF,KAArB;AACH;;AAEDvC,IAAAA,KAAK,CAAC+B,IAAN,CAAW,gDAAX,EAA6D;AACzDhB,MAAAA,QAAQ,EAAEA,QAD+C;AAEzDF,MAAAA,OAAO,EAAEA,OAFgD;AAGzDF,MAAAA,KAAK,EAAEA,KAHkD;AAIzDM,MAAAA,KAAK,EAAEoB,SAJkD;AAKzDO,MAAAA,GAAG,EAAEN;AALoD,KAA7D,EAMGb,IANH,CAMSS,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACP,IAAT,CAAcQ,OAAlB,EAA2B;AACvBzB,QAAAA,gBAAgB,CAACwB,QAAQ,CAACP,IAAT,CAAcQ,OAAf,CAAhB;AACH;AACJ,KAVD;AAWH,GAvBD;;AAyBA,QAAMU,WAAW,GAAG,CAChB;AAACN,IAAAA,KAAK,EAAE,IAAR;AAAcI,IAAAA,KAAK,EAAE;AAArB,GADgB,EAEhB;AAACJ,IAAAA,KAAK,EAAE,IAAR;AAAcI,IAAAA,KAAK,EAAE;AAArB,GAFgB,EAGhB;AAACJ,IAAAA,KAAK,EAAE,IAAR;AAAcI,IAAAA,KAAK,EAAE;AAArB,GAHgB,EAIhB;AAACJ,IAAAA,KAAK,EAAE,IAAR;AAAcI,IAAAA,KAAK,EAAE;AAArB,GAJgB,EAKhB;AAACJ,IAAAA,KAAK,EAAE,GAAR;AAAaI,IAAAA,KAAK,EAAE;AAApB,GALgB,CAApB;AAQA,QAAMG,SAAS,GAAG,CACd;AAACP,IAAAA,KAAK,EAAE,cAAR;AAAwBI,IAAAA,KAAK,EAAE;AAA/B,GADc,EAEd;AAACJ,IAAAA,KAAK,EAAE,OAAR;AAAiBI,IAAAA,KAAK,EAAE;AAAxB,GAFc,EAGd;AAACJ,IAAAA,KAAK,EAAE,UAAR;AAAoBI,IAAAA,KAAK,EAAE;AAA3B,GAHc,EAId;AAACJ,IAAAA,KAAK,EAAE,OAAR;AAAiBI,IAAAA,KAAK,EAAE;AAAxB,GAJc,EAKd;AAACJ,IAAAA,KAAK,EAAE,MAAR;AAAgBI,IAAAA,KAAK,EAAE;AAAvB,GALc,EAMd;AAACJ,IAAAA,KAAK,EAAE,WAAR;AAAqBI,IAAAA,KAAK,EAAE;AAA5B,GANc,CAAlB;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA3FuBtC,Y;UACJN,U,EACWK,wB;;;KAFPC,Y","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport useUnsavedChangesWarning from \"../../hooks/useUnsavedChangesWarning\";\r\n\r\nimport \"./EditablePage.css\"\r\n\r\nexport default function EditablePage(){\r\n    const history = useHistory();\r\n    const [Prompt, setDirty] = useUnsavedChangesWarning();\r\n    const [publishstatus, GetPublishStatus] = useState('')\r\n\r\n    const [title, GetTitle] = useState('')\r\n    const [content, GetContent] = useState('')\r\n    const [location, GetLocation] = useState('')\r\n    const [timer, GetTimer] = useState('0')\r\n    const [Tag, GetTag] = useState([])\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your confession here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === false) {\r\n                history.push(\"/\")\r\n            } \r\n        });\r\n\r\n    }, []); // remove the , [] later on \r\n\r\n    const createconfession = () => {\r\n        Axios.post(\"http://localhost:3001/createconfession\", {\r\n        })\r\n        GetCreate(true)\r\n    }\r\n\r\n    const savetoDraft = () => {\r\n        Axios.post(\"http://localhost:3001/updateconfession/draft\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetPublishStatus(response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const publishConfession = () => {\r\n        let usertimer = 0\r\n        var tagarray = []\r\n        if (timer.value !== undefined) {\r\n            usertimer = timer.value\r\n        }\r\n\r\n        for (var i = 0; i < Tag.length; i++) {\r\n            delete Tag[i].label\r\n            tagarray.push(Tag[i].value)\r\n        } \r\n\r\n        Axios.post(\"http://localhost:3001/updateconfession/publish\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n            timer: usertimer,\r\n            tag: tagarray,\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetPublishStatus(response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const TimerOption = [\r\n        {value: '12', label: 'Half Day'},\r\n        {value: '24', label: 'One Day'},\r\n        {value: '48', label: 'Two Days'},\r\n        {value: '72', label: 'Three Days'},\r\n        {value: '0', label: 'Permanent'},\r\n    ]\r\n\r\n    const TagOption = [\r\n        {value: 'relationship', label: 'Relationship'},\r\n        {value: 'thief', label: 'Thief'},\r\n        {value: 'sabotage', label: 'Sabotage'},\r\n        {value: 'karma', label: 'Karma'},\r\n        {value: 'bday', label: 'Birthday'},\r\n        {value: 'eventruin', label: 'Event Ruiner'},\r\n    ]\r\n\r\n    return (\r\n        <div className=\"EditablePage\">\r\n            <h2>Editable Text Page</h2>\r\n            <p>This text page should be editable</p>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}