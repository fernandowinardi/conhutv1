{"ast":null,"code":"var domToReact = require('./lib/dom-to-react');\n\nvar attributesToProps = require('./lib/attributes-to-props');\n\nvar htmlToDOM = require('html-dom-parser');\n\nvar domParserOptions = {\n  lowerCaseAttributeNames: false\n};\n/**\r\n * Converts HTML string to React elements.\r\n *\r\n * @param  {String}   html                    - HTML string.\r\n * @param  {Object}   [options]               - Parser options.\r\n * @param  {Object}   [options.htmlparser2]   - htmlparser2 options.\r\n * @param  {Object}   [options.library]       - Library for React, Preact, etc.\r\n * @param  {Function} [options.replace]       - Replace method.\r\n * @return {JSX.Element|JSX.Element[]|String} - React element(s), empty array, or string.\r\n */\n\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  }\n\n  options = options || {};\n  return domToReact(htmlToDOM(html, options.htmlparser2 || domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps; // support CommonJS and ES Modules\n\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;","map":{"version":3,"sources":["C:/Users/Fernando Winardi/Downloads/ConHut/frontend/node_modules/html-react-parser/index.js"],"names":["domToReact","require","attributesToProps","htmlToDOM","domParserOptions","lowerCaseAttributeNames","HTMLReactParser","html","options","TypeError","htmlparser2","module","exports","default"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AAEA,IAAIG,gBAAgB,GAAG;AAAEC,EAAAA,uBAAuB,EAAE;AAA3B,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACtC,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,SAAJ,CAAc,iCAAd,CAAN;AACD;;AACD,MAAIF,IAAI,KAAK,EAAb,EAAiB;AACf,WAAO,EAAP;AACD;;AACDC,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,SAAOR,UAAU,CACfG,SAAS,CAACI,IAAD,EAAOC,OAAO,CAACE,WAAR,IAAuBN,gBAA9B,CADM,EAEfI,OAFe,CAAjB;AAID;;AAEDF,eAAe,CAACN,UAAhB,GAA6BA,UAA7B;AACAM,eAAe,CAACH,SAAhB,GAA4BA,SAA5B;AACAG,eAAe,CAACJ,iBAAhB,GAAoCA,iBAApC,C,CAEA;;AACAS,MAAM,CAACC,OAAP,GAAiBN,eAAjB;AACAK,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBP,eAAzB","sourcesContent":["var domToReact = require('./lib/dom-to-react');\r\nvar attributesToProps = require('./lib/attributes-to-props');\r\nvar htmlToDOM = require('html-dom-parser');\r\n\r\nvar domParserOptions = { lowerCaseAttributeNames: false };\r\n\r\n/**\r\n * Converts HTML string to React elements.\r\n *\r\n * @param  {String}   html                    - HTML string.\r\n * @param  {Object}   [options]               - Parser options.\r\n * @param  {Object}   [options.htmlparser2]   - htmlparser2 options.\r\n * @param  {Object}   [options.library]       - Library for React, Preact, etc.\r\n * @param  {Function} [options.replace]       - Replace method.\r\n * @return {JSX.Element|JSX.Element[]|String} - React element(s), empty array, or string.\r\n */\r\nfunction HTMLReactParser(html, options) {\r\n  if (typeof html !== 'string') {\r\n    throw new TypeError('First argument must be a string');\r\n  }\r\n  if (html === '') {\r\n    return [];\r\n  }\r\n  options = options || {};\r\n  return domToReact(\r\n    htmlToDOM(html, options.htmlparser2 || domParserOptions),\r\n    options\r\n  );\r\n}\r\n\r\nHTMLReactParser.domToReact = domToReact;\r\nHTMLReactParser.htmlToDOM = htmlToDOM;\r\nHTMLReactParser.attributesToProps = attributesToProps;\r\n\r\n// support CommonJS and ES Modules\r\nmodule.exports = HTMLReactParser;\r\nmodule.exports.default = HTMLReactParser;\r\n"]},"metadata":{},"sourceType":"script"}