{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\YourPostPage\\\\YourPostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Modal from \"react-responsive-modal\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport parse from 'html-react-parser';\nimport \"./YourPostPage.css\";\nexport default function YourPostPage() {\n  _s();\n\n  const history = useHistory();\n  const [confessionList, GetConfessionList] = useState([]);\n  const [CommentMode, SetCommentMode] = useState(false);\n  const [CCMode, SetCCMode] = useState(false); // comment comment\n\n  const [confirmationMode, SetConfirmation] = useState(false);\n  const [CommentList, GetCommentList] = useState([]);\n  const [comment, GetComment] = useState(\"\");\n  const [CC, GetCC] = useState(\"\");\n  const [CCList, GetCCList] = useState([]);\n  const [CCcontent, SetCCcontent] = useState(\"\");\n  const [CCowner, SetCCowner] = useState(\"\");\n  const [CCID, SetCCID] = useState(0);\n  const [LikedList, GetLikedList] = useState([]);\n  const [usertag, GetUserTag] = useState(\"\");\n  const [usertype, GetUserType] = useState(\"\");\n  const editorConfiguration = {\n    placeholder: \"Type your comment here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n\n  const likeConfession = conID => {\n    Axios.post(\"http://localhost:3001/confession/like\", {\n      confessid: conID\n    });\n    window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\n  };\n\n  const openConfirmation = () => {\n    SetConfirmation(true);\n  };\n\n  const closeConfirmation = () => {\n    SetConfirmation(false);\n  };\n\n  const getComment = con_ID => {\n    SetCommentMode(true);\n    console.log(con_ID);\n    Axios.post(\"http://localhost:3001/confession/comment/get\", {\n      confessid: con_ID\n    }).then(response => {\n      GetCommentList(response.data);\n    });\n  };\n\n  const postcomment = () => {\n    Axios.post(\"http://localhost:3001/confession/comment/post\", {\n      content: comment\n    }).then(response => {\n      if (response.data.message) {\n        GetComment(\"\");\n        SetCommentMode(false);\n      }\n    });\n  };\n\n  const closemodal = () => {\n    SetCommentMode(false);\n    SetCCMode(false);\n  };\n\n  const clicktag = tag => {\n    Axios.post(\"http://localhost:3001/tag/store\", {\n      clicktag: tag\n    });\n    history.push(`/search/${tag}`);\n  };\n\n  const deleteconfession = conID => {\n    Axios.delete(`http://localhost:3001/confession/delete/${conID}`);\n    window.location.reload();\n  };\n\n  const commentcomment = (comID, content, owner) => {\n    SetCCMode(true);\n    SetCCowner(owner);\n    SetCCcontent(content);\n    SetCCID(comID);\n    Axios.post(\"http://localhost:3001/confession/comment/comment/get\", {\n      commentID: comID\n    }).then(response => {\n      if (response.data) {\n        GetCCList(response.data);\n      }\n    });\n  };\n\n  const postcc = () => {\n    console.log(CCID);\n    Axios.post(\"http://localhost:3001/confession/comment/comment/post\", {\n      content: CC,\n      commentID: CCID\n    }).then(response => {\n      if (response.data.message) {\n        GetCC(\"\");\n        closemodal();\n        window.location.reload();\n      }\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === true) {\n        GetUserTag(result.data.user[0].anontag);\n        GetUserType(result.data.user[0].usertype);\n        Axios.get(\"http://localhost:3001/confession/userpost/getall\").then(response => {\n          if (response.data) {\n            GetConfessionList(response.data);\n          }\n        });\n        Axios.get(\"http://localhost:3001/confession/likes/compare\").then(result => {\n          if (result.data) {\n            GetLikedList(result.data[0].liked_confession);\n          }\n        });\n      } else {\n        history.push(\"/\");\n      }\n    });\n  }, []); // remove the , [] later on \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"YourPostPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBarDiv\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \"Your Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepageContainer\",\n      children: confessionList.map(val => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessOwner\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Confession by: \", /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: val.confess_owner\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessTitle\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confess Title: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), val.confess_title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confession:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: parse(val.confess_content)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessLocation\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Location: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), val.confess_location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessTime\",\n              children: [\"Posted at: \", val.date_published.substring(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"like-area\",\n              children: [LikedList.includes(val.confess_id) === false && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-heart liked\",\n                onClick: () => likeConfession(val.confess_id),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 82\n              }, this), LikedList.includes(val.confess_id) === true && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-heart unliked\",\n                onClick: () => likeConfession(val.confess_id),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 81\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" \", val.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-area\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-comment\",\n                onClick: () => getComment(val.confess_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\" \", val.comnum]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessTags\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tags: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), val.confess_tag.map(value => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"tag-btn\",\n                  onClick: () => clicktag(value),\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), (usertag === val.confess_owner === true || usertype === \"admin\") && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\",\n              onClick: openConfirmation,\n              children: \" Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 99\n            }, this), confirmationMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Modal, {\n                open: true,\n                onClose: closeConfirmation,\n                showCloseIcon: false,\n                classNames: {\n                  overlay: 'customOverlay',\n                  modal: 'customModal'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"deleteContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Are you sure you want to delete your confession?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"deleteBtn\",\n                    onClick: () => deleteconfession(val.confess_id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"deleteCancelBtn\",\n                    onClick: closeConfirmation,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 59\n            }, this), CommentMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Modal, {\n                open: true,\n                onClose: closemodal,\n                children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n                  editor: Editor,\n                  data: \"\",\n                  config: editorConfiguration,\n                  onChange: (event, editor) => {\n                    const data = editor.getData();\n                    GetComment(data);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: postcomment,\n                  children: \"Enter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"all-comments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Comments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 41\n                  }, this), CommentList.map(value => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"commentOwner\",\n                          children: [value.comment_owner, \" said:\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 233,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                          onClick: () => commentcomment(value.comment_id, value.comment_content, value.comment_owner),\n                          children: [\"Reply...  (\", value.replycount, \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commentContent\",\n                        children: parse(value.comment_content)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 54\n            }, this), CCMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Modal, {\n                open: true,\n                onClose: closemodal,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"commentOwner\",\n                    children: [\"Replying to \", /*#__PURE__*/_jsxDEV(\"u\", {\n                      children: [CCowner, \"'s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 85\n                    }, this), \" comment:\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"commentContent\",\n                    children: parse(CCcontent)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n                    editor: Editor,\n                    data: \"\",\n                    config: editorConfiguration,\n                    onChange: (event, editor) => {\n                      const data = editor.getData();\n                      GetCC(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"commentBtn\",\n                    onClick: postcc,\n                    children: \"Enter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"all-replies\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Replies:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 41\n                  }, this), CCList.map(value => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"commentOwner\",\n                          children: [/*#__PURE__*/_jsxDEV(\"u\", {\n                            children: value.comment_owner\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 269,\n                            columnNumber: 85\n                          }, this), \" comment:\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"commentContent\",\n                          children: parse(value.comment)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 270,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YourPostPage, \"EDIrdwpK+q70ScuHm4exvLTy3XE=\", false, function () {\n  return [useHistory];\n});\n\n_c = YourPostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourPostPage\");","map":{"version":3,"sources":["D:/ConHut/frontend/src/pages/YourPostPage/YourPostPage.js"],"names":["React","useEffect","useState","NavBar","Axios","useHistory","Modal","CKEditor","Editor","parse","YourPostPage","history","confessionList","GetConfessionList","CommentMode","SetCommentMode","CCMode","SetCCMode","confirmationMode","SetConfirmation","CommentList","GetCommentList","comment","GetComment","CC","GetCC","CCList","GetCCList","CCcontent","SetCCcontent","CCowner","SetCCowner","CCID","SetCCID","LikedList","GetLikedList","usertag","GetUserTag","usertype","GetUserType","editorConfiguration","placeholder","toolbar","likeConfession","conID","post","confessid","window","location","reload","openConfirmation","closeConfirmation","getComment","con_ID","console","log","then","response","data","postcomment","content","message","closemodal","clicktag","tag","push","deleteconfession","delete","commentcomment","comID","owner","commentID","postcc","get","result","loggedIn","user","anontag","liked_confession","map","val","confess_owner","confess_title","confess_content","confess_location","date_published","substring","includes","confess_id","likes","comnum","confess_tag","value","overlay","modal","event","editor","getData","comment_owner","comment_id","comment_content","replycount"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Modal from \"react-responsive-modal\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport parse from 'html-react-parser';\r\n\r\nimport \"./YourPostPage.css\"\r\n\r\nexport default function YourPostPage() {\r\n    const history = useHistory();\r\n\r\n    const [confessionList, GetConfessionList] = useState([])\r\n    const [CommentMode, SetCommentMode] = useState(false)\r\n    const [CCMode, SetCCMode] = useState(false) // comment comment\r\n    const [confirmationMode, SetConfirmation] = useState(false)\r\n    const [CommentList, GetCommentList] = useState([])\r\n    const [comment, GetComment] = useState(\"\")\r\n    const [CC, GetCC] = useState(\"\")\r\n    const [CCList, GetCCList] = useState([])\r\n    const [CCcontent, SetCCcontent] = useState(\"\")\r\n    const [CCowner, SetCCowner] = useState(\"\")\r\n    const [CCID, SetCCID] = useState(0)\r\n    const [LikedList, GetLikedList] = useState([])\r\n    const [usertag, GetUserTag] = useState(\"\")\r\n    const [usertype, GetUserType] = useState(\"\")\r\n    \r\n    const editorConfiguration = {\r\n        placeholder: \"Type your comment here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const likeConfession = (conID) => {\r\n        Axios.post(\"http://localhost:3001/confession/like\", {\r\n            confessid: conID\r\n        })\r\n        window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\r\n    }\r\n\r\n    const openConfirmation = () => {\r\n        SetConfirmation(true)\r\n    }\r\n\r\n    const closeConfirmation = () => {\r\n        SetConfirmation(false)\r\n    }\r\n\r\n    const getComment = (con_ID) => {\r\n        SetCommentMode(true)\r\n        console.log(con_ID)\r\n        Axios.post(\"http://localhost:3001/confession/comment/get\", {\r\n            confessid: con_ID\r\n        }).then((response) => {\r\n            GetCommentList(response.data)\r\n        })\r\n    }\r\n\r\n    const postcomment = () => {\r\n        Axios.post(\"http://localhost:3001/confession/comment/post\", {\r\n            content: comment\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetComment(\"\")\r\n                SetCommentMode(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const closemodal = () => {\r\n        SetCommentMode(false)\r\n        SetCCMode(false)\r\n    }\r\n\r\n    const clicktag = (tag) => {\r\n        Axios.post(\"http://localhost:3001/tag/store\", {\r\n            clicktag: tag\r\n        })\r\n        history.push(`/search/${tag}`)\r\n    }\r\n\r\n    const deleteconfession = (conID) => {\r\n        Axios.delete(`http://localhost:3001/confession/delete/${conID}`)\r\n        window.location.reload();\r\n    }\r\n\r\n    const commentcomment = (comID, content, owner) => {\r\n        SetCCMode(true);\r\n        SetCCowner(owner)\r\n        SetCCcontent(content)\r\n        SetCCID(comID)\r\n        Axios.post(\"http://localhost:3001/confession/comment/comment/get\", {\r\n            commentID: comID\r\n        }).then((response) => {\r\n            if (response.data) {\r\n                GetCCList(response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const postcc = () => {\r\n        console.log(CCID)\r\n        Axios.post(\"http://localhost:3001/confession/comment/comment/post\", {\r\n            content: CC,\r\n            commentID: CCID\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetCC(\"\")\r\n                closemodal()\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === true) {\r\n                GetUserTag(result.data.user[0].anontag)\r\n                GetUserType(result.data.user[0].usertype)\r\n                Axios.get(\"http://localhost:3001/confession/userpost/getall\").then((response) => {\r\n                    if (response.data) {\r\n                        GetConfessionList(response.data)\r\n                    }\r\n                })\r\n                Axios.get(\"http://localhost:3001/confession/likes/compare\").then((result) => {\r\n                    if (result.data) {\r\n                        GetLikedList(result.data[0].liked_confession)\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                history.push(\"/\")\r\n            }\r\n        });\r\n    }, []); // remove the , [] later on \r\n    \r\n    return (\r\n        <div className=\"YourPostPage\">\r\n            <div className=\"navBarDiv\">\r\n                <NavBar/>\r\n            </div>\r\n\r\n            <div className=\"homeHeader\">\r\n                <h1 className=\"header\">Your Post</h1>\r\n            </div>\r\n            \r\n            <div className=\"homepageContainer\">\r\n                {confessionList.map((val) => {\r\n                    return (\r\n                        <>\r\n                        <div className=\"displayCard\">\r\n                            <div className=\"confessOwner\">\r\n                                <p>Confession by: <u>{val.confess_owner}</u></p>\r\n                            </div>\r\n\r\n                            <div className=\"confessTitle\">\r\n                                <label>Confess Title: </label>\r\n                                {val.confess_title}\r\n                            </div>\r\n                            \r\n                            <div className=\"confessContent\">\r\n                                <label>Confession:</label>\r\n                                <p>{parse(val.confess_content)}</p>\r\n                            </div>\r\n\r\n                            <div className=\"confessLocation\">\r\n                                <label>Location: </label>\r\n                                {val.confess_location}\r\n                            </div>\r\n\r\n                            <div className=\"confessTime\">\r\n                                Posted at: {val.date_published.substring(0,10)}\r\n                            </div>\r\n\r\n                            <div className=\"like-area\">\r\n                                {LikedList.includes(val.confess_id) === false && <i className=\"fa fa-heart liked\" onClick={() => likeConfession(val.confess_id)}> </i>}\r\n                                {LikedList.includes(val.confess_id) === true && <i className=\"fa fa-heart unliked\" onClick={() => likeConfession(val.confess_id)}> </i>}\r\n                                <label> {val.likes}</label>\r\n                            </div>\r\n\r\n                            <div className=\"comment-area\">\r\n                                <i className=\"fa fa-comment\" onClick={() => getComment(val.confess_id)}></i>\r\n                                <label> {val.comnum}</label>\r\n                            </div>\r\n\r\n                            <div className=\"block1\"></div>\r\n\r\n                            <div className=\"confessTags\">\r\n                                <label>Tags: </label>\r\n                                {val.confess_tag.map((value) => {\r\n                                    return(\r\n                                        <button className=\"tag-btn\" onClick={() => clicktag(value)}>{value}</button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n\r\n                            {((usertag === val.confess_owner) === true || usertype === \"admin\")&& <i className=\"fa fa-trash\" onClick={openConfirmation}> Delete</i>}\r\n                            {confirmationMode === true && <div>\r\n                                <Modal open={true} onClose={closeConfirmation} showCloseIcon={false} classNames={{\r\n                                    overlay: 'customOverlay',\r\n                                    modal: 'customModal'\r\n                                }}>\r\n                                    <div className=\"deleteContainer\">\r\n                                        <p>Are you sure you want to delete your confession?</p>\r\n                                        <button className=\"deleteBtn\" onClick={() => deleteconfession(val.confess_id)}>Delete</button>\r\n                                        <button className=\"deleteCancelBtn\" onClick={closeConfirmation}>Cancel</button>\r\n                                    </div>\r\n                                    \r\n                                </Modal>\r\n\r\n                                </div>}\r\n\r\n                            {CommentMode === true && <div>\r\n                                <Modal open={true} onClose={closemodal}>\r\n                                    <CKEditor\r\n                                        editor = { Editor }\r\n                                        data = \"\"\r\n                                        config = {editorConfiguration}\r\n                                        onChange = {(event, editor) => {\r\n                                            const data = editor.getData()\r\n                                            GetComment(data);\r\n                                        }}                       \r\n                                    />\r\n                                    <button onClick={postcomment}>Enter</button> \r\n                                    <div className=\"all-comments\">\r\n                                        <h3>Comments:</h3>\r\n                                        {CommentList.map((value) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <div>\r\n                                                        <label className=\"commentOwner\">{value.comment_owner} said:</label>\r\n                                                        <a onClick={() => commentcomment(value.comment_id, value.comment_content, value.comment_owner)}>Reply...  ({value.replycount})</a>\r\n                                                    </div>\r\n                                                    <p className=\"commentContent\">{parse(value.comment_content)}</p>\r\n                                                    <hr></hr>\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </Modal>\r\n                            </div>}\r\n                            {CCMode === true && <div>\r\n                                <Modal open={true} onClose={closemodal}>\r\n                                    <div>\r\n                                        <label className=\"commentOwner\">Replying to <u>{CCowner}'s</u> comment:</label>\r\n                                        <p className=\"commentContent\">{parse(CCcontent)}</p>\r\n                                        <hr></hr>\r\n                                    </div>\r\n                                    <div>\r\n                                        <CKEditor\r\n                                            editor = { Editor }\r\n                                            data = \"\"\r\n                                            config = {editorConfiguration}\r\n                                            onChange = {(event, editor) => {\r\n                                                const data = editor.getData()\r\n                                                GetCC(data);\r\n                                            }}    \r\n                                        />\r\n                                        <button className=\"commentBtn\" onClick={postcc}>Enter</button>\r\n                                    </div>\r\n                                    <div className=\"all-replies\">\r\n                                        <h3>Replies:</h3>\r\n                                        {CCList.map((value) => {\r\n                                            return (\r\n                                                <>\r\n                                                <div>\r\n                                                    <label className=\"commentOwner\"><u>{value.comment_owner}</u> comment:</label>\r\n                                                    <p className=\"commentContent\">{parse(value.comment)}</p>\r\n                                                    <hr></hr>\r\n                                                </div>\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </Modal>\r\n                            </div>}\r\n                        </div>\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}