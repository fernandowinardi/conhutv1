{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"D:/ConHut/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Axios from'axios';import TagOption from'../../GlobalVar/TagOption';import TimerOption from'../../GlobalVar/TimerOption';import'./CreateConfession.css';// create confession\nimport{CKEditor}from'@ckeditor/ckeditor5-react';import Select from'react-select';import Editor from'ckeditor5-custom-build/build/ckeditor';export default function CreateConfession(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],GetTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],GetContent=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),location=_useState6[0],GetLocation=_useState6[1];var _useState7=useState('0'),_useState8=_slicedToArray(_useState7,2),timer=_useState8[0],GetTimer=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),Tag=_useState10[0],GetTag=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),PublishStatus=_useState12[0],GetPublishStatus=_useState12[1];var editorConfiguration={placeholder:\"Type your confession here...\",toolbar:[\"bold\",\"italic\",\"underline\"]};var postConfession=function postConfession(draft){var usertimer=0;var tagarray=[];if(draft===0){if(timer.value!==undefined){usertimer=timer.value;}for(var i=0;i<Tag.length;i++){delete Tag[i].label;tagarray.push(Tag[i].value);}if(location===\"\"||content===\"\"||title===\"\"||usertimer===0||tagarray.length===0){GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\");return;}}else if(draft===1){if(title===\"\"){GetPublishStatus(\"Add a title before saving to draft!\");return;}}Axios.post(\"http://localhost:3001/confession/create\",{location:location,content:content,title:title,timer:usertimer,tag:tagarray,draft:draft}).then(function(response){console.log(response.data.message);GetPublishStatus(response.data.message);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"createConfession\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"label\",children:[\" Title:\",/*#__PURE__*/_jsx(\"input\",{className:\"TitleField\",maxLength:\"250\",placeholder:\"Spice your confession!\",onChange:function onChange(e){GetTitle(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"block1\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CKEditor,{editor:Editor,data:content,config:editorConfiguration,onChange:function onChange(event,editor){var data=editor.getData();GetContent(data);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"block1\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"label\",children:[\" Crime scene:\",/*#__PURE__*/_jsx(\"input\",{className:\"LocationField\",maxLength:\"150\",placeholder:\"Where did it take place?\",onChange:function onChange(event){GetLocation(event.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"block1\"}),/*#__PURE__*/_jsx(Select,{className:\"SelectField\",defaultValue:timer,onChange:GetTimer,options:TimerOption}),/*#__PURE__*/_jsx(\"div\",{className:\"block2\"}),/*#__PURE__*/_jsx(Select,{className:\"SelectField\",defaultValue:Tag,onChange:GetTag,isMulti:true,options:TagOption}),/*#__PURE__*/_jsx(\"div\",{className:\"block1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"DraftBtn\",onClick:function onClick(){postConfession(1);},children:\"Save to Draft\"}),/*#__PURE__*/_jsx(\"button\",{className:\"PublishBtn\",onClick:function onClick(){postConfession(0);},children:\"Publish\"})]}),/*#__PURE__*/_jsx(\"p\",{children:PublishStatus})]});}","map":{"version":3,"sources":["D:/ConHut/frontend/src/components/CreateConfession/CreateConfession.js"],"names":["React","useState","Axios","TagOption","TimerOption","CKEditor","Select","Editor","CreateConfession","title","GetTitle","content","GetContent","location","GetLocation","timer","GetTimer","Tag","GetTag","PublishStatus","GetPublishStatus","editorConfiguration","placeholder","toolbar","postConfession","draft","usertimer","tagarray","value","undefined","i","length","label","push","post","tag","then","response","console","log","data","message","e","target","event","editor","getData"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport TagOption from '../../GlobalVar/TagOption';\r\nimport TimerOption from '../../GlobalVar/TimerOption';\r\nimport './CreateConfession.css'\r\n\r\n// create confession\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Select from 'react-select';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\n\r\nexport default function CreateConfession() {\r\n\r\n    const [title, GetTitle] = useState('')\r\n    const [content, GetContent] = useState('')\r\n    const [location, GetLocation] = useState('')\r\n    const [timer, GetTimer] = useState('0')\r\n    const [Tag, GetTag] = useState([])\r\n    const [PublishStatus, GetPublishStatus] = useState('')\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your confession here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const postConfession = (draft) => {\r\n        let usertimer = 0\r\n        var tagarray = []\r\n        if (draft === 0) {\r\n            if (timer.value !== undefined) {\r\n                usertimer = timer.value\r\n            }\r\n\r\n            for (var i = 0; i < Tag.length; i++) {\r\n                delete Tag[i].label\r\n                tagarray.push(Tag[i].value)\r\n            } \r\n\r\n            if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\r\n                GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\")\r\n                return\r\n            } \r\n\r\n        } else if (draft === 1) {\r\n            if (title === \"\") {\r\n                GetPublishStatus(\"Add a title before saving to draft!\")\r\n                return\r\n            }\r\n        } \r\n\r\n        Axios.post(\"http://localhost:3001/confession/create\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n            timer: usertimer,\r\n            tag: tagarray,\r\n            draft: draft,\r\n        }).then((response) => {\r\n            console.log(response.data.message)\r\n            GetPublishStatus(response.data.message)\r\n        })\r\n\r\n        \r\n    }\r\n    return (\r\n            <div className=\"createConfession\">\r\n                <div>\r\n                    <label className=\"label\"> Title:\r\n                        <input \r\n                        className = \"TitleField\"\r\n                        maxLength = \"250\"\r\n                        placeholder=\"Spice your confession!\"\r\n                        onChange={(e) => {\r\n                            GetTitle(e.target.value);\r\n                        }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"block1\"></div>\r\n                <div>\r\n                    <CKEditor\r\n                        editor = { Editor }\r\n                        data = {content}\r\n                        config = {editorConfiguration}\r\n                        onChange = {(event, editor) => {\r\n                            const data = editor.getData()\r\n                            GetContent(data);\r\n                        }}                       \r\n                    />\r\n                </div>\r\n                <div className=\"block1\"></div>\r\n                <div>\r\n                    <label className=\"label\"> Crime scene:\r\n                        <input\r\n                        className = \"LocationField\" \r\n                        maxLength = \"150\"\r\n                        placeholder=\"Where did it take place?\"\r\n                        onChange={(event) => {\r\n                            GetLocation(event.target.value);\r\n                        }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"block1\"></div>\r\n                <Select\r\n                    className = \"SelectField\"\r\n                    defaultValue = {timer}\r\n                    onChange = {GetTimer}\r\n                    options = {TimerOption}/>\r\n                <div className=\"block2\"></div>\r\n                <Select\r\n                    className = \"SelectField\"\r\n                    defaultValue = {Tag}\r\n                    onChange = {GetTag}\r\n                    isMulti\r\n                    options = {TagOption}/>\r\n                <div className=\"block1\"></div>\r\n                <div className=\"buttons\">\r\n                    <button className=\"DraftBtn\" onClick={() => {postConfession(1)}}>Save to Draft</button>\r\n                    <button className=\"PublishBtn\" onClick={() => {postConfession(0)}}>Publish</button>\r\n                </div>\r\n                 <p>{PublishStatus}</p>\r\n        </div>\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}