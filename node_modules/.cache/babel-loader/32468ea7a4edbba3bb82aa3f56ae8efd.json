{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ConHut\\\\frontend\\\\src\\\\components\\\\NavBar\\\\NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport logo from '../../images/logo.png';\nimport \"./NavBar.css\";\nimport CreateConfession from '../CreateConfession/CreateConfession';\nimport Modal from \"react-responsive-modal\";\nexport default function NavBar() {\n  _s();\n\n  const [ModalStatus, SetModalStatus] = useState(false);\n  const [CPwModal, SetCPwModal] = useState(false);\n  const [title, GetTitle] = useState('');\n  const [content, GetContent] = useState('');\n  const [location, GetLocation] = useState('');\n  const [timer, GetTimer] = useState('0');\n  const [Tag, GetTag] = useState([]);\n  const [PublishStatus, GetPublishStatus] = useState('');\n  const editorConfiguration = {\n    placeholder: \"Type your confession here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n\n  const logout = () => {\n    Axios.post(\"http://localhost:3001/logout\", {});\n  };\n\n  const openModal = () => {\n    SetModalStatus(true);\n  };\n\n  const closeModal = () => {\n    SetModalStatus(false);\n  };\n\n  const CpwOpenModal = () => {};\n\n  const postConfession = draft => {\n    let usertimer = 0;\n    var tagarray = [];\n\n    if (draft === 0) {\n      if (timer.value !== undefined) {\n        usertimer = timer.value;\n      }\n\n      for (var i = 0; i < Tag.length; i++) {\n        delete Tag[i].label;\n        tagarray.push(Tag[i].value);\n      }\n\n      if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\n        GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\");\n        return;\n      }\n    } else if (draft === 1) {\n      if (title === \"\") {\n        GetPublishStatus(\"Add a title before saving to draft!\");\n        return;\n      }\n    }\n\n    Axios.post(\"http://localhost:3001/confession/create\", {\n      location: location,\n      content: content,\n      title: title,\n      timer: usertimer,\n      tag: tagarray,\n      draft: draft\n    }).then(response => {\n      console.log(response.data.message);\n      GetPublishStatus(response.data.message);\n      SetModalStatus(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/home\",\n          className: \"options\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logoClass\",\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/draft\",\n          className: \"options\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/draft\",\n            children: \"Confession Draft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"options\",\n          onClick: openModal,\n          children: \"Make Confession\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"options\",\n          onClick: () => SetCPwModal(true),\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"logoutOption\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), ModalStatus === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        open: true,\n        onClose: closeModal,\n        classNames: {\n          overlay: 'customOverlay',\n          modal: 'customModal'\n        },\n        children: /*#__PURE__*/_jsxDEV(CreateConfession, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 38\n    }, this), CPwModal === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        open: true,\n        onClose: () => SetCPwModal(false),\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"toZvSKFxzLILRbwt5S6Afxp3T+A=\");\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["D:/ConHut/frontend/src/components/NavBar/NavBar.js"],"names":["React","useState","Axios","Link","logo","CreateConfession","Modal","NavBar","ModalStatus","SetModalStatus","CPwModal","SetCPwModal","title","GetTitle","content","GetContent","location","GetLocation","timer","GetTimer","Tag","GetTag","PublishStatus","GetPublishStatus","editorConfiguration","placeholder","toolbar","logout","post","openModal","closeModal","CpwOpenModal","postConfession","draft","usertimer","tagarray","value","undefined","i","length","label","push","tag","then","response","console","log","data","message","overlay","modal"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport logo from '../../images/logo.png';\r\n\r\nimport \"./NavBar.css\";\r\nimport CreateConfession from '../CreateConfession/CreateConfession';\r\nimport Modal from \"react-responsive-modal\";\r\n\r\nexport default function NavBar() {  \r\n    const [ModalStatus, SetModalStatus] = useState(false)\r\n    const [CPwModal, SetCPwModal] = useState(false)\r\n\r\n    const [title, GetTitle] = useState('')\r\n    const [content, GetContent] = useState('')\r\n    const [location, GetLocation] = useState('')\r\n    const [timer, GetTimer] = useState('0')\r\n    const [Tag, GetTag] = useState([])\r\n    const [PublishStatus, GetPublishStatus] = useState('')\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your confession here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post(\"http://localhost:3001/logout\", {\r\n        })\r\n    }\r\n\r\n    const openModal = () => {\r\n        SetModalStatus(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        SetModalStatus(false)\r\n    }\r\n\r\n    const CpwOpenModal = () => {\r\n\r\n    }\r\n\r\n    const postConfession = (draft) => {\r\n        let usertimer = 0\r\n        var tagarray = []\r\n        if (draft === 0) {\r\n            if (timer.value !== undefined) {\r\n                usertimer = timer.value\r\n            }\r\n\r\n            for (var i = 0; i < Tag.length; i++) {\r\n                delete Tag[i].label\r\n                tagarray.push(Tag[i].value)\r\n            } \r\n\r\n            if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\r\n                GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\")\r\n                return\r\n            } \r\n\r\n        } else if (draft === 1) {\r\n            if (title === \"\") {\r\n                GetPublishStatus(\"Add a title before saving to draft!\")\r\n                return\r\n            }\r\n        } \r\n\r\n        Axios.post(\"http://localhost:3001/confession/create\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n            timer: usertimer,\r\n            tag: tagarray,\r\n            draft: draft,\r\n        }).then((response) => {\r\n            console.log(response.data.message)\r\n            GetPublishStatus(response.data.message)\r\n            SetModalStatus(false)\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <nav className=\"navBar\">\r\n                <li>\r\n                    <a href=\"/home\" className=\"options\"><Link to=\"/home\"><img className=\"logoClass\" src={logo}/></Link></a> {/* i delete src={logo}*/}\r\n                </li>\r\n                <li>\r\n                    <a href=\"/draft\" className=\"options\"><Link to=\"/draft\">Confession Draft</Link></a>\r\n                </li>\r\n                <li>\r\n                    <a className=\"options\" onClick={openModal}>Make Confession</a>\r\n                </li>\r\n                <li> {/* if can this at the bottom of the page ya */}\r\n                    <a className=\"options\" onClick={() => SetCPwModal(true)}>Change password</a>\r\n                </li>\r\n                <li> {/* if can this at the bottom of the page ya */}\r\n                    <a href=\"/\" className=\"logoutOption\"><Link to=\"/\" onClick={logout}>Logout</Link></a>\r\n                </li>\r\n            </nav>\r\n            {ModalStatus === true && <div>\r\n                <Modal open={true} onClose={closeModal} classNames={{\r\n                    overlay: 'customOverlay',\r\n                    modal: 'customModal',\r\n                }}>\r\n                    <CreateConfession/>\r\n                </Modal>\r\n            </div>}\r\n            {CPwModal === true && <div>\r\n                <Modal open={true} onClose={() => SetCPwModal(false)}>\r\n                    test\r\n                </Modal>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}