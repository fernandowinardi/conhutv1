{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Fernando Winardi\\\\Downloads\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport RSNav from '../../components/RightSideNav/RSNav';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Modal from \"react-responsive-modal\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport parse from 'html-react-parser';\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"./HomePage.css\";\nexport default function HomePage() {\n  _s();\n\n  const history = useHistory();\n  const [confessionList, GetConfessionList] = useState([]);\n  const [CommentMode, SetCommentMode] = useState(false);\n  const [confirmationMode, SetConfirmation] = useState(false);\n  const [CommentList, GetCommentList] = useState([]);\n  const [comment, GetComment] = useState(\"\");\n  const [LikedList, GetLikedList] = useState([]);\n  const [usertag, GetUserTag] = useState(\"\");\n  const [usertype, GetUserType] = useState(\"\");\n  const editorConfiguration = {\n    placeholder: \"Type your comment here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n\n  const likeConfession = conID => {\n    Axios.post(\"http://localhost:3001/confession/like\", {\n      confessid: conID\n    });\n    window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\n  };\n\n  const openConfirmation = () => {\n    SetConfirmation(true);\n  };\n\n  const closeConfirmation = () => {\n    SetConfirmation(false);\n  };\n\n  const getComment = con_ID => {\n    SetCommentMode(true);\n    Axios.post(\"http://localhost:3001/confession/comment/get\", {\n      confessid: con_ID\n    }).then(response => {\n      GetCommentList(response.data);\n    });\n  };\n\n  const postcomment = () => {\n    Axios.post(\"http://localhost:3001/confession/comment/post\", {\n      content: comment\n    }).then(response => {\n      if (response.data.message) {\n        GetComment(\"\");\n        SetCommentMode(false);\n        window.location.reload();\n      }\n    });\n  };\n\n  const closemodal = () => {\n    SetCommentMode(false);\n  };\n\n  const clicktag = tag => {\n    Axios.post(\"http://localhost:3001/tag/store\", {\n      clicktag: tag\n    });\n    history.push(`/search/${tag}`);\n    window.location.reload();\n  };\n\n  const deleteconfession = conID => {\n    Axios.delete(`http://localhost:3001/confession/delete/${conID}`);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === true) {\n        GetUserTag(result.data.user[0].anontag);\n        GetUserType(result.data.user[0].usertype);\n        Axios.get(\"http://localhost:3001/confession/publish/getall\").then(response => {\n          if (response.data) {\n            GetConfessionList(response.data);\n          }\n        });\n        Axios.get(\"http://localhost:3001/confession/likes/compare\").then(result => {\n          if (result.data) {\n            GetLikedList(result.data[0].liked_confession);\n          }\n        });\n      } else {\n        history.push(\"/\");\n      }\n    });\n  }, []); // remove the , [] later on \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HomePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBarDiv\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homeHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepageContainer\",\n        children: confessionList.map(val => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"displayCard\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessOwner\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"owner\",\n                  children: [\"Confessed by: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: val.confess_owner\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessLocation\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Happened at: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"location\",\n                    children: val.confess_location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessTime\",\n                children: [\"Posted at: \", val.date_published.substring(0, 10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessTitle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"title\",\n                  children: [val.confess_title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessContent\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: parse(val.confess_content)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"like-area\",\n                children: [LikedList.includes(val.confess_id) === false && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-heart liked\",\n                  onClick: () => likeConfession(val.confess_id),\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 86\n                }, this), LikedList.includes(val.confess_id) === true && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-heart unliked\",\n                  onClick: () => likeConfession(val.confess_id),\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 85\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\" \", val.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-area\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-comment\",\n                  onClick: () => getComment(val.confess_id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\" \", val.comnum]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessTags\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Tags: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), val.confess_tag.map(value => {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"tag-btn\",\n                    onClick: () => clicktag(value),\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), (usertag === val.confess_owner === true || usertype === \"admin\") && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash\",\n                onClick: openConfirmation,\n                children: \" Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 103\n              }, this), confirmationMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Modal, {\n                  open: true,\n                  onClose: closeConfirmation,\n                  showCloseIcon: false,\n                  classNames: {\n                    overlay: 'customOverlay',\n                    modal: 'customModal'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"deleteContainer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Are you sure you want to delete your confession?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"deleteBtn\",\n                      onClick: () => deleteconfession(val.confess_id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"deleteCancelBtn\",\n                      onClick: closeConfirmation,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 63\n              }, this), CommentMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Modal, {\n                  open: true,\n                  onClose: closemodal,\n                  showCloseIcon: false,\n                  classNames: {\n                    overlay: 'customOverlay3',\n                    modal: 'customModal3'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n                    editor: Editor,\n                    data: \"\",\n                    config: editorConfiguration,\n                    onChange: (event, editor) => {\n                      const data = editor.getData();\n                      GetComment(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"commentBtn\",\n                    onClick: postcomment,\n                    children: \"Enter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"all-comments\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Comments:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this), CommentList.map(value => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"commentOwner\",\n                          children: [value.comment_owner, \" said:\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"commentContent\",\n                          children: parse(value.comment_content)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"J4VOzGZJoCgF75a1QUwyzsPIFGE=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\n\nclass Button extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default btn-round\",\n        value: this.props.buttonProp,\n        onClick: this.props.buttonOnClick,\n        children: this.props.buttonProp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Fernando Winardi/Downloads/ConHut/frontend/src/pages/HomePage/HomePage.js"],"names":["React","useEffect","useState","NavBar","RSNav","Axios","useHistory","Modal","CKEditor","Editor","parse","HomePage","history","confessionList","GetConfessionList","CommentMode","SetCommentMode","confirmationMode","SetConfirmation","CommentList","GetCommentList","comment","GetComment","LikedList","GetLikedList","usertag","GetUserTag","usertype","GetUserType","editorConfiguration","placeholder","toolbar","likeConfession","conID","post","confessid","window","location","reload","openConfirmation","closeConfirmation","getComment","con_ID","then","response","data","postcomment","content","message","closemodal","clicktag","tag","push","deleteconfession","delete","get","result","loggedIn","user","anontag","liked_confession","map","val","confess_owner","confess_location","date_published","substring","confess_title","confess_content","includes","confess_id","likes","comnum","confess_tag","value","overlay","modal","event","editor","getData","comment_owner","comment_content","Button","Component","render","props","buttonProp","buttonOnClick"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport RSNav from '../../components/RightSideNav/RSNav'\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Modal from \"react-responsive-modal\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport parse from 'html-react-parser';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport \"./HomePage.css\"\r\n\r\nexport default function HomePage() {\r\n    const history = useHistory();\r\n\r\n    const [confessionList, GetConfessionList] = useState([])\r\n    const [CommentMode, SetCommentMode] = useState(false)\r\n    const [confirmationMode, SetConfirmation] = useState(false)\r\n    const [CommentList, GetCommentList] = useState([])\r\n    const [comment, GetComment] = useState(\"\")\r\n    const [LikedList, GetLikedList] = useState([])\r\n    const [usertag, GetUserTag] = useState(\"\")\r\n    const [usertype, GetUserType] = useState(\"\")\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your comment here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const likeConfession = (conID) => {\r\n        Axios.post(\"http://localhost:3001/confession/like\", {\r\n            confessid: conID\r\n        })\r\n        window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\r\n    }\r\n\r\n    const openConfirmation = () => {\r\n        SetConfirmation(true)\r\n    }\r\n\r\n    const closeConfirmation = () => {\r\n        SetConfirmation(false)\r\n    }\r\n\r\n    const getComment = (con_ID) => {\r\n        SetCommentMode(true)\r\n        Axios.post(\"http://localhost:3001/confession/comment/get\", {\r\n            confessid: con_ID\r\n        }).then((response) => {\r\n            GetCommentList(response.data)\r\n        })\r\n    }\r\n\r\n    const postcomment = () => {\r\n        Axios.post(\"http://localhost:3001/confession/comment/post\", {\r\n            content: comment\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetComment(\"\")\r\n                SetCommentMode(false)\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    const closemodal = () => {\r\n        SetCommentMode(false)\r\n    }\r\n\r\n    const clicktag = (tag) => {\r\n        Axios.post(\"http://localhost:3001/tag/store\", {\r\n            clicktag: tag\r\n        })\r\n        history.push(`/search/${tag}`)\r\n        window.location.reload();\r\n    }\r\n\r\n    const deleteconfession = (conID) => {\r\n        Axios.delete(`http://localhost:3001/confession/delete/${conID}`)\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === true) {\r\n                GetUserTag(result.data.user[0].anontag)\r\n                GetUserType(result.data.user[0].usertype)\r\n                Axios.get(\"http://localhost:3001/confession/publish/getall\").then((response) => {\r\n                    if (response.data) {\r\n                        GetConfessionList(response.data)\r\n                    }\r\n                })\r\n                Axios.get(\"http://localhost:3001/confession/likes/compare\").then((result) => {\r\n                    if (result.data) {\r\n                        GetLikedList(result.data[0].liked_confession)\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                history.push(\"/\")\r\n            }\r\n        });\r\n    }, []); // remove the , [] later on \r\n    \r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"navBarDiv\">\r\n                <NavBar/>\r\n            </div>\r\n            <div className=\"mainContainer\">\r\n                <div className=\"homeHeader\">\r\n                    <h1>Home</h1>\r\n                </div>\r\n                \r\n                <div className=\"homepageContainer\">\r\n                    {confessionList.map((val) => {\r\n                        return (\r\n                            <>\r\n                            <div className=\"displayCard\">\r\n                                <div className=\"confessOwner\">\r\n                                    <label className=\"owner\">Confessed by: <b>{val.confess_owner}</b></label>\r\n                                </div>\r\n\r\n                                <div className=\"confessLocation\">\r\n                                    <label>Happened at: <a className=\"location\">{val.confess_location}</a></label>                               \r\n                                </div>\r\n\r\n                                <div className=\"confessTime\">\r\n                                    Posted at: {val.date_published.substring(0,10)}\r\n                                </div>\r\n\r\n                                <div className=\"confessTitle\">\r\n                                    <label className=\"title\">{val.confess_title} </label>\r\n                                    \r\n                                </div>\r\n                                \r\n                                <div className=\"confessContent\">\r\n                                    <p>{parse(val.confess_content)}</p>\r\n                                </div>\r\n\r\n                                <div className=\"like-area\">\r\n                                    {LikedList.includes(val.confess_id) === false && <i className=\"fa fa-heart liked\" onClick={() => likeConfession(val.confess_id)}> </i>}\r\n                                    {LikedList.includes(val.confess_id) === true && <i className=\"fa fa-heart unliked\" onClick={() => likeConfession(val.confess_id)}> </i>}\r\n                                    <label> {val.likes}</label>\r\n                                </div>\r\n\r\n                                <div className=\"comment-area\">\r\n                                    <i className=\"fa fa-comment\" onClick={() => getComment(val.confess_id)}></i>\r\n                                    <label> {val.comnum}</label>\r\n                                </div>\r\n\r\n                                <div className=\"block1\"></div>\r\n\r\n                                <div className=\"confessTags\">\r\n                                    <label>Tags: </label>\r\n                                    {val.confess_tag.map((value) => {\r\n                                        return(\r\n                                            <button className=\"tag-btn\" onClick={() => clicktag(value)}>{value}</button>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n\r\n                                {((usertag === val.confess_owner) === true || usertype === \"admin\")&& <i className=\"fa fa-trash\" onClick={openConfirmation}> Delete</i>}\r\n                                {confirmationMode === true && <div>\r\n                                    <Modal open={true} onClose={closeConfirmation} showCloseIcon={false} classNames={{\r\n                                        overlay: 'customOverlay',\r\n                                        modal: 'customModal'\r\n                                    }}>\r\n                                        <div className=\"deleteContainer\">\r\n                                            <p>Are you sure you want to delete your confession?</p>\r\n                                            <button className=\"deleteBtn\" onClick={() => deleteconfession(val.confess_id)}>Delete</button>\r\n                                            <button className=\"deleteCancelBtn\" onClick={closeConfirmation}>Cancel</button>\r\n                                        </div>\r\n                                        \r\n                                    </Modal>\r\n\r\n                                    </div>} \r\n\r\n                                {CommentMode === true && <div>\r\n                                    <Modal open={true} onClose={closemodal} showCloseIcon={false}classNames={{\r\n                                        overlay: 'customOverlay3',\r\n                                        modal: 'customModal3',\r\n                                    }}>\r\n                                        <CKEditor\r\n                                            editor = { Editor }\r\n                                            data = \"\"\r\n                                            config = {editorConfiguration}\r\n                                            onChange = {(event, editor) => {\r\n                                                const data = editor.getData()\r\n                                                GetComment(data);\r\n                                            }}                       \r\n                                        />\r\n                                        <button className=\"commentBtn\" onClick={postcomment}>Enter</button> \r\n                                        <div className=\"all-comments\">\r\n                                            <h3>Comments:</h3>\r\n                                            {CommentList.map((value) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <label className=\"commentOwner\">{value.comment_owner} said:</label>\r\n                                                        <p className=\"commentContent\">{parse(value.comment_content)}</p>\r\n                                                        <hr></hr>\r\n                                                    </>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </Modal>\r\n                                </div>}\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n    class Button extends React.Component {\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                <button type=\"button\" className=\"btn btn-default btn-round\" value={this.props.buttonProp} onClick={this.props.buttonOnClick}>{this.props.buttonProp}</button>\r\n                </div>\r\n            )\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}