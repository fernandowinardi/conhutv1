{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Fernando Winardi\\\\Downloads\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\EditablePage\\\\EditablePage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport Modal from \"react-responsive-modal\";\nimport Select from 'react-select'; // import NavBar \n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport \"./EditablePage.css\";\nexport default function EditablePage() {\n  _s();\n\n  const history = useHistory();\n  const [openDraft, GotDraft] = useState(false);\n  const [publishstatus, GetPublishStatus] = useState('');\n  const [draftList, GetDraftList] = useState([]);\n  const [publishSuc, SetPubSuc] = useState(false);\n  const [location, SetLocation] = useState('');\n  const [title, SetTitle] = useState('');\n  const [content, SetContent] = useState('');\n  const [timer, SetTimer] = useState('0');\n  const [Tag, SetTag] = useState([]);\n  const [modalStatus, GetModalStatus] = useState(false);\n  const [TagOption, GetTagOption] = useState([]);\n  const editorConfiguration = {\n    placeholder: \"Type your confession here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === true) {\n        Axios.get(\"http://localhost:3001/confession/getdraft\").then(response => {\n          if (response.data) {\n            GetDraftList(response.data);\n          }\n        });\n        Axios.get(\"http://localhost:3001/tagoption/get\").then(response => {\n          if (response.data) {\n            GetTagOption(response.data);\n          }\n        });\n      } else {\n        history.push(\"/\");\n      }\n    });\n\n    if (content !== \"\") {\n      window.addEventListener('beforeunload', alertUser);\n      return () => {\n        window.removeEventListener('beforeunload', alertUser);\n      };\n    }\n  }, []); // remove the , [] later on \n\n  const alertUser = e => {\n    e.preventDefault();\n    e.returnValue = '';\n  };\n\n  const closemodal = () => {\n    GetModalStatus(false);\n  };\n\n  const savetoDraft = () => {\n    if (title === \"\") {\n      GetPublishStatus(\"Add a title before saving to draft!\");\n      GetModalStatus(true);\n    } else {\n      Axios.post(\"http://localhost:3001/updateconfession/draft\", {\n        location: location,\n        content: content,\n        title: title\n      }).then(response => {\n        if (response.data.message) {\n          GetPublishStatus(response.data.message);\n          GetModalStatus(true);\n        }\n      });\n      history.push(\"/home\");\n    }\n  };\n\n  const publishConfession = () => {\n    let usertimer = 0;\n    var tagarray = [];\n\n    if (timer.value !== undefined) {\n      usertimer = timer.value;\n    }\n\n    for (var i = 0; i < Tag.length; i++) {\n      delete Tag[i].label;\n      tagarray.push(Tag[i].value);\n    }\n\n    if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\n      GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\");\n      GetModalStatus(true);\n    } else {\n      console.log(\"publish\");\n      Axios.post(\"http://localhost:3001/updateconfession/publish\", {\n        location: location,\n        content: content,\n        title: title,\n        timer: usertimer,\n        tag: tagarray\n      }).then(response => {\n        if (response.data.message) {\n          GetPublishStatus(response.data.message);\n          GetModalStatus(true);\n        }\n      });\n      history.push(\"/home\");\n    }\n  };\n\n  const FindDraftID = conID => {\n    const currentID = `${conID}`;\n    GotDraft(true);\n    Axios.post(\"http://localhost:3001/confession/store/id\", {\n      confessID: currentID\n    });\n    Axios.post(\"http://localhost:3001/confession/getdraft/specific\", {\n      confessID: currentID\n    }).then(response => {\n      if (response.data) {\n        var array = Object.values(response.data[0]);\n        console.log(array[4]);\n        console.log(array);\n        SetLocation(array[2]);\n        SetTitle(array[3]);\n\n        if (array[4] !== null) {\n          SetContent(array[4]);\n        }\n      }\n    });\n  };\n\n  const TimerOption = [{\n    value: '12',\n    label: 'Half Day'\n  }, {\n    value: '24',\n    label: 'One Day'\n  }, {\n    value: '48',\n    label: 'Two Days'\n  }, {\n    value: '72',\n    label: 'Three Days'\n  }, {\n    value: '0',\n    label: 'Permanent'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DraftPage\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draftContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your draft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 18\n      }, this), openDraft === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: draftList.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-draft-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clickable-box\",\n              onClick: () => {\n                FindDraftID(val.confess_id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"draftTitle\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" Title: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 63\n                }, this), \" \", val.confess_title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }, this), openDraft === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createConfession\",\n          children: [publishSuc === true && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: publishstatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }, this), publishSuc === false && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: [\" Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"TitleField\",\n                  value: title,\n                  maxLength: \"250\",\n                  placeholder: \"Spice your confession!\",\n                  onChange: e => {\n                    SetTitle(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(CKEditor, {\n                editor: Editor,\n                data: content,\n                config: editorConfiguration,\n                onChange: (event, editor) => {\n                  const data = editor.getData();\n                  SetContent(data);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label\",\n                children: [\" Crime scene:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"LocationField\",\n                  value: location,\n                  maxLength: \"150\",\n                  placeholder: \"Where did it take place?\",\n                  onChange: event => {\n                    SetLocation(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"SelectField\",\n              defaultValue: timer,\n              onChange: SetTimer,\n              options: TimerOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"SelectField\",\n              defaultValue: Tag,\n              onChange: SetTag,\n              isMulti: true,\n              options: TagOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"DraftBtn\",\n                onClick: () => {\n                  savetoDraft();\n                },\n                children: \"Save to Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"PublishBtn\",\n                onClick: () => {\n                  publishConfession();\n                },\n                children: \"Publish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: publishstatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditablePage, \"2Ua6PnHs9Bb4cmhblTyQkBOO2ms=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditablePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditablePage\");","map":{"version":3,"sources":["C:/Users/Fernando Winardi/Downloads/ConHut/frontend/src/pages/EditablePage/EditablePage.js"],"names":["React","useState","useEffect","useHistory","Axios","CKEditor","Editor","Modal","Select","NavBar","EditablePage","history","openDraft","GotDraft","publishstatus","GetPublishStatus","draftList","GetDraftList","publishSuc","SetPubSuc","location","SetLocation","title","SetTitle","content","SetContent","timer","SetTimer","Tag","SetTag","modalStatus","GetModalStatus","TagOption","GetTagOption","editorConfiguration","placeholder","toolbar","get","then","result","data","loggedIn","response","push","window","addEventListener","alertUser","removeEventListener","e","preventDefault","returnValue","closemodal","savetoDraft","post","message","publishConfession","usertimer","tagarray","value","undefined","i","length","label","console","log","tag","FindDraftID","conID","currentID","confessID","array","Object","values","TimerOption","map","val","confess_id","confess_title","target","event","editor","getData"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\n\r\nimport Modal from \"react-responsive-modal\";\r\nimport Select from 'react-select';\r\n\r\n// import NavBar \r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\n\r\nimport \"./EditablePage.css\"\r\n\r\nexport default function EditablePage(){\r\n    const history = useHistory();\r\n\r\n    const [openDraft, GotDraft] = useState(false);\r\n    const [publishstatus, GetPublishStatus] = useState('');\r\n    const [draftList, GetDraftList] = useState([]);\r\n    const [publishSuc, SetPubSuc] = useState(false)\r\n\r\n    const [location, SetLocation] = useState('');\r\n    const [title, SetTitle] = useState('');\r\n    const [content, SetContent] = useState('');\r\n    const [timer, SetTimer] = useState('0');\r\n    const [Tag, SetTag] = useState([]);\r\n    const [modalStatus, GetModalStatus] = useState(false);\r\n    const [TagOption, GetTagOption] = useState([]);\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your confession here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === true) {\r\n                Axios.get(\"http://localhost:3001/confession/getdraft\").then((response) => {\r\n                    if (response.data) {\r\n                        GetDraftList(response.data)\r\n                    }\r\n                })\r\n                Axios.get(\"http://localhost:3001/tagoption/get\").then((response) => {\r\n                    if (response.data) {\r\n                        GetTagOption(response.data)\r\n                    }\r\n                })\r\n            } else {\r\n                history.push(\"/\")\r\n            }\r\n        });\r\n        if (content !== \"\") {\r\n            window.addEventListener('beforeunload', alertUser)\r\n            return () => {\r\n                window.removeEventListener('beforeunload', alertUser)\r\n            }\r\n        }\r\n    }, []); // remove the , [] later on \r\n\r\n    const alertUser = (e) => {\r\n        e.preventDefault();\r\n        e.returnValue = ''\r\n    }\r\n\r\n    const closemodal = () => {\r\n        GetModalStatus(false)\r\n    }\r\n\r\n    const savetoDraft = () => {\r\n        if (title === \"\") {\r\n            GetPublishStatus(\"Add a title before saving to draft!\")\r\n            GetModalStatus(true)\r\n        } else {\r\n            Axios.post(\"http://localhost:3001/updateconfession/draft\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n            }).then((response) => {\r\n                if (response.data.message) {\r\n                    GetPublishStatus(response.data.message)\r\n                    GetModalStatus(true)\r\n                }\r\n            })\r\n            history.push(\"/home\")\r\n        }\r\n    }\r\n\r\n    const publishConfession = () => {\r\n        let usertimer = 0\r\n        var tagarray = []\r\n\r\n        if (timer.value !== undefined) {\r\n            usertimer = timer.value\r\n        }\r\n\r\n        for (var i = 0; i < Tag.length; i++) {\r\n            delete Tag[i].label\r\n            tagarray.push(Tag[i].value)\r\n        } \r\n\r\n        if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\r\n            GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\")\r\n            GetModalStatus(true)\r\n        } else {\r\n            console.log(\"publish\")\r\n            Axios.post(\"http://localhost:3001/updateconfession/publish\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n            timer: usertimer,\r\n            tag: tagarray,\r\n            }).then((response) => {\r\n                if (response.data.message) {\r\n                    GetPublishStatus(response.data.message)\r\n                    GetModalStatus(true)\r\n                }\r\n            })\r\n            history.push(\"/home\")\r\n        }\r\n    }\r\n\r\n    const FindDraftID = (conID) => {\r\n        const currentID = `${conID}`\r\n        GotDraft(true)\r\n        Axios.post(\"http://localhost:3001/confession/store/id\", {\r\n            confessID: currentID\r\n        })\r\n\r\n        Axios.post(\"http://localhost:3001/confession/getdraft/specific\", {\r\n            confessID: currentID\r\n        }).then((response) => {\r\n            if (response.data) {\r\n                var array = Object.values(response.data[0])\r\n                console.log(array[4])\r\n                console.log(array)\r\n                SetLocation(array[2])\r\n                SetTitle(array[3])\r\n                if (array[4] !== null) {\r\n                    SetContent(array[4])\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const TimerOption = [\r\n        {value: '12', label: 'Half Day'},\r\n        {value: '24', label: 'One Day'},\r\n        {value: '48', label: 'Two Days'},\r\n        {value: '72', label: 'Three Days'},\r\n        {value: '0', label: 'Permanent'},\r\n    ]\r\n\r\n    return (\r\n        <div className=\"DraftPage\">\r\n            <NavBar/>\r\n            <div className=\"draftContainer\">\r\n                 <h2>Your draft</h2>\r\n                    {openDraft === false && <div>\r\n                    {draftList.map((val) => {\r\n                        return (\r\n                            <div className=\"list-draft-box\">\r\n                                <div className=\"clickable-box\" onClick={() => {FindDraftID(val.confess_id)}}>\r\n                                    <a className=\"draftTitle\"><b> Title: </b> {val.confess_title}</a>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>}\r\n                {openDraft === true && <div>\r\n                    <div className=\"createConfession\">\r\n            {publishSuc === true && <div>\r\n                <p>{publishstatus}</p>\r\n            </div>}\r\n            {publishSuc === false && <div>\r\n                <div>\r\n                    <label className=\"label\"> Title:\r\n                        <input \r\n                        className = \"TitleField\"\r\n                        value = {title}\r\n                        maxLength = \"250\"\r\n                        placeholder=\"Spice your confession!\"\r\n                        onChange={(e) => {\r\n                            SetTitle(e.target.value);\r\n                        }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            <div className=\"block1\"></div>\r\n            <div>\r\n                <CKEditor\r\n                    editor = { Editor }\r\n                    data = {content}\r\n                    config = {editorConfiguration}\r\n                    onChange = {(event, editor) => {\r\n                        const data = editor.getData()\r\n                        SetContent(data);\r\n                    }}                       \r\n                />\r\n            </div>\r\n            <div className=\"block1\"></div>\r\n            <div>\r\n                <label className=\"label\"> Crime scene:\r\n                    <input\r\n                    className = \"LocationField\" \r\n                    value = {location}\r\n                    maxLength = \"150\"\r\n                    placeholder=\"Where did it take place?\"\r\n                    onChange={(event) => {\r\n                        SetLocation(event.target.value);\r\n                    }}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div className=\"block1\"></div>\r\n            <Select\r\n                className = \"SelectField\"\r\n                defaultValue = {timer}\r\n                onChange = {SetTimer}\r\n                options = {TimerOption}/>\r\n            <div className=\"block2\"></div>\r\n            <Select\r\n                className = \"SelectField\"\r\n                defaultValue = {Tag}\r\n                onChange = {SetTag}\r\n                isMulti\r\n                options = {TagOption}/>\r\n            <div className=\"block1\"></div>\r\n            <div className=\"buttons\">\r\n                <button className=\"DraftBtn\" onClick={() => {savetoDraft()}}>Save to Draft</button>\r\n                <button className=\"PublishBtn\" onClick={() => {publishConfession()}}>Publish</button>\r\n            </div>\r\n            <p>{publishstatus}</p>\r\n        </div>}\r\n    </div>\r\n                </div>}\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}