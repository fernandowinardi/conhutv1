{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\TagSearchPage\\\\TagSearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Modal from \"react-responsive-modal\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport parse from 'html-react-parser';\nimport \"./TagSearchPage.css\";\nexport default function TagSearchPage() {\n  _s();\n\n  const history = useHistory();\n  const [TagContentList, GetTagContentList] = useState([]);\n  const [CurrentTag, GetCurrentTag] = useState('');\n  const [CommentMode, SetCommentMode] = useState(false);\n  const [CommentList, GetCommentList] = useState([]);\n  const [comment, GetComment] = useState(\"\");\n  const [LikedList, GetLikedList] = useState([]);\n  const [usertag, GetUserTag] = useState(\"\");\n  const editorConfiguration = {\n    placeholder: \"Type your comment here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n\n  const likeConfession = conID => {\n    Axios.post(\"http://localhost:3001/confession/like\", {\n      confessid: conID\n    });\n    window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\n  };\n\n  const getComment = con_ID => {\n    SetCommentMode(true);\n    console.log(con_ID);\n    Axios.post(\"http://localhost:3001/confession/comment/get\", {\n      confessid: con_ID\n    }).then(response => {\n      GetCommentList(response.data);\n    });\n  };\n\n  const postcomment = () => {\n    Axios.post(\"http://localhost:3001/confession/comment/post\", {\n      content: comment\n    }).then(response => {\n      if (response.data.message) {\n        GetComment(\"\");\n        SetCommentMode(false);\n      }\n    });\n  };\n\n  const closemodal = () => {\n    SetCommentMode(false);\n  };\n\n  const clicktag = tag => {\n    Axios.post(\"http://localhost:3001/tag/store\", {\n      clicktag: tag\n    });\n    history.push(`/search/${tag}`);\n  };\n\n  const deleteconfession = conID => {\n    Axios.delete(`http://localhost:3001/confession/delete/${conID}`);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === true) {\n        GetUserTag(result.data.user[0].anontag);\n        Axios.get(\"http://localhost:3001/tag/search\").then(response => {\n          GetTagContentList(response.data.tr);\n          GetCurrentTag(response.data.curtag);\n        });\n        Axios.get(\"http://localhost:3001/confession/likes/compare\").then(result => {\n          if (result.data) {\n            GetLikedList(result.data[0].liked_confession);\n          }\n        });\n      } else {\n        history.push(\"/\");\n      }\n    });\n  }); // remove the , [] later on \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag-search-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBarDiv\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [CurrentTag, \" confessions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepageContainer\",\n      children: TagContentList.map(val => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessOwner\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Confession by: \", /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: val.confess_owner\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessTitle\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confess Title: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this), val.confess_title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confession:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: parse(val.confess_content)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessLocation\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Location: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this), val.confess_location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessTime\",\n              children: [\"Posted at: \", val.date_published.substring(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"like-area\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Number of likes: \", val.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this), LikedList.includes(val.confess_id) === false && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => likeConfession(val.confess_id),\n                children: \"Like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 78\n              }, this), LikedList.includes(val.confess_id) === true && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => likeConfession(val.confess_id),\n                children: \"Unlike\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 77\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-area\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Number of comments: \", val.comnum]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => getComment(val.confess_id),\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confessTags\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tags: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), val.confess_tag.map(value => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"tag-btn\",\n                  onClick: () => clicktag(value),\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), usertag === val.confess_owner === true && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteconfession(val.confess_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 74\n            }, this), CommentMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Modal, {\n                open: true,\n                onClose: closemodal,\n                children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n                  editor: Editor,\n                  data: \"\",\n                  config: editorConfiguration,\n                  onChange: (event, editor) => {\n                    const data = editor.getData();\n                    GetComment(data);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: postcomment,\n                  children: \"Enter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"all-comments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Comments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 37\n                  }, this), CommentList.map(value => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [value.comment_owner, \" wrote: \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: parse(value.comment_content)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TagSearchPage, \"+ZwqdnUdW4aEa2munb3FLfhnDJU=\", false, function () {\n  return [useHistory];\n});\n\n_c = TagSearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagSearchPage\");","map":{"version":3,"sources":["D:/ConHut/frontend/src/pages/TagSearchPage/TagSearchPage.js"],"names":["React","useEffect","useState","NavBar","Axios","useHistory","Modal","CKEditor","Editor","parse","TagSearchPage","history","TagContentList","GetTagContentList","CurrentTag","GetCurrentTag","CommentMode","SetCommentMode","CommentList","GetCommentList","comment","GetComment","LikedList","GetLikedList","usertag","GetUserTag","editorConfiguration","placeholder","toolbar","likeConfession","conID","post","confessid","window","location","reload","getComment","con_ID","console","log","then","response","data","postcomment","content","message","closemodal","clicktag","tag","push","deleteconfession","delete","get","result","loggedIn","user","anontag","tr","curtag","liked_confession","map","val","confess_owner","confess_title","confess_content","confess_location","date_published","substring","likes","includes","confess_id","comnum","confess_tag","value","event","editor","getData","comment_owner","comment_content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Modal from \"react-responsive-modal\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport parse from 'html-react-parser';\r\n\r\nimport \"./TagSearchPage.css\"\r\n\r\nexport default function TagSearchPage() {\r\n    const history = useHistory();\r\n\r\n    const [TagContentList, GetTagContentList] = useState([])\r\n    const [CurrentTag, GetCurrentTag] = useState('')\r\n\r\n    const [CommentMode, SetCommentMode] = useState(false)\r\n    const [CommentList, GetCommentList] = useState([])\r\n    const [comment, GetComment] = useState(\"\")\r\n    const [LikedList, GetLikedList] = useState([])\r\n    const [usertag, GetUserTag] = useState(\"\")\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your comment here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const likeConfession = (conID) => {\r\n        Axios.post(\"http://localhost:3001/confession/like\", {\r\n            confessid: conID\r\n        })\r\n        window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\r\n    }\r\n\r\n    const getComment = (con_ID) => {\r\n        SetCommentMode(true)\r\n        console.log(con_ID)\r\n        Axios.post(\"http://localhost:3001/confession/comment/get\", {\r\n            confessid: con_ID\r\n        }).then((response) => {\r\n            GetCommentList(response.data)\r\n        })\r\n    }\r\n\r\n    const postcomment = () => {\r\n        Axios.post(\"http://localhost:3001/confession/comment/post\", {\r\n            content: comment\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetComment(\"\")\r\n                SetCommentMode(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const closemodal = () => {\r\n        SetCommentMode(false)\r\n    }\r\n\r\n    const clicktag = (tag) => {\r\n        Axios.post(\"http://localhost:3001/tag/store\", {\r\n            clicktag: tag\r\n        })\r\n        history.push(`/search/${tag}`)\r\n    }\r\n\r\n    const deleteconfession = (conID) => {\r\n        Axios.delete(`http://localhost:3001/confession/delete/${conID}`)\r\n        window.location.reload();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === true) {\r\n                GetUserTag(result.data.user[0].anontag)\r\n                Axios.get(\"http://localhost:3001/tag/search\").then((response) => {\r\n                    GetTagContentList(response.data.tr)\r\n                    GetCurrentTag(response.data.curtag)\r\n                })\r\n                Axios.get(\"http://localhost:3001/confession/likes/compare\").then((result) => {\r\n                    if (result.data) {\r\n                        GetLikedList(result.data[0].liked_confession)\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                history.push(\"/\")\r\n            }\r\n        });\r\n    }); // remove the , [] later on \r\n    \r\n    return (\r\n        <div className=\"tag-search-page\">\r\n        <div className=\"navBarDiv\">\r\n            <NavBar/>\r\n        </div>\r\n        <div className=\"homeHeader\">\r\n            <h1>{CurrentTag} confessions</h1>\r\n        </div>\r\n        <div className=\"homepageContainer\">\r\n            {TagContentList.map((val) => {\r\n                return (\r\n                    <>\r\n                    <div className=\"displayCard\">\r\n                        <div className=\"confessOwner\">\r\n                            <p>Confession by: <u>{val.confess_owner}</u></p>\r\n                        </div>\r\n\r\n                        <div className=\"confessTitle\">\r\n                            <label>Confess Title: </label>\r\n                            {val.confess_title}\r\n                        </div>\r\n                        \r\n                        <div className=\"confessContent\">\r\n                            <label>Confession:</label>\r\n                            <p>{parse(val.confess_content)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"confessLocation\">\r\n                            <label>Location: </label>\r\n                            {val.confess_location}\r\n                        </div>\r\n\r\n                        <div className=\"confessTime\">\r\n                            Posted at: {val.date_published.substring(0,10)}\r\n                        </div>\r\n\r\n                        <div className=\"like-area\">\r\n                            <label>Number of likes: {val.likes}</label>\r\n                            {LikedList.includes(val.confess_id) === false && <button onClick={() => likeConfession(val.confess_id)}>Like</button>}\r\n                            {LikedList.includes(val.confess_id) === true && <button onClick={() => likeConfession(val.confess_id)}>Unlike</button>}\r\n                        </div>\r\n\r\n                        <div className=\"comment-area\">\r\n                            <label>Number of comments: {val.comnum}</label>\r\n                            <button onClick={() => getComment(val.confess_id)}>Comment</button>\r\n                        </div>\r\n\r\n                        <div className=\"block1\"></div>\r\n\r\n                            <div className=\"confessTags\">\r\n                                <label>Tags: </label>\r\n                                {val.confess_tag.map((value) => {\r\n                                    return(\r\n                                        <button className=\"tag-btn\" onClick={() => clicktag(value)}>{value}</button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            {(usertag === val.confess_owner) === true && <button onClick={() => deleteconfession(val.confess_id)}>Delete</button>}\r\n\r\n                        {CommentMode === true && <div>\r\n                            <Modal open={true} onClose={closemodal}>\r\n                                <CKEditor\r\n                                    editor = { Editor }\r\n                                    data = \"\"\r\n                                    config = {editorConfiguration}\r\n                                    onChange = {(event, editor) => {\r\n                                        const data = editor.getData()\r\n                                        GetComment(data);\r\n                                    }}                       \r\n                                />\r\n                                <button onClick={postcomment}>Enter</button> \r\n                                <div className=\"all-comments\">\r\n                                    <h3>Comments:</h3>\r\n                                    {CommentList.map((value) => {\r\n                                        return (\r\n                                            <>\r\n                                                <label>{value.comment_owner} wrote: </label>\r\n                                                <p>{parse(value.comment_content)}</p>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </Modal>\r\n                        </div>}\r\n                    </div>\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}