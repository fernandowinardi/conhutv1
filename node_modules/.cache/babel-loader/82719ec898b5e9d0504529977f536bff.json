{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Fernando Winardi\\\\Downloads\\\\ConHut\\\\frontend\\\\src\\\\components\\\\CreateConfession\\\\CreateConfession.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport TagOption from '../../GlobalVar/TagOption';\nimport TimerOption from '../../GlobalVar/TimerOption';\nimport './CreateConfession.css'; // create confession\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Select from 'react-select';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nexport default function CreateConfession() {\n  _s();\n\n  const [title, GetTitle] = useState('');\n  const [content, GetContent] = useState('');\n  const [location, GetLocation] = useState('');\n  const [timer, GetTimer] = useState('0');\n  const [Tag, GetTag] = useState([]);\n  const [PublishStatus, GetPublishStatus] = useState('');\n  const editorConfiguration = {\n    placeholder: \"Type your confession here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n\n  const postConfession = draft => {\n    let usertimer = 0;\n    var tagarray = [];\n\n    if (draft === 0) {\n      if (timer.value !== undefined) {\n        usertimer = timer.value;\n      }\n\n      for (var i = 0; i < Tag.length; i++) {\n        delete Tag[i].label;\n        tagarray.push(Tag[i].value);\n      }\n\n      if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\n        GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\");\n        return;\n      }\n    } else if (draft === 1) {\n      if (title === \"\") {\n        GetPublishStatus(\"Add a title before saving to draft!\");\n        return;\n      }\n    }\n\n    Axios.post(\"http://localhost:3001/confession/create\", {\n      location: location,\n      content: content,\n      title: title,\n      timer: usertimer,\n      tag: tagarray,\n      draft: draft\n    }).then(response => {\n      console.log(response.data.message);\n      GetPublishStatus(response.data.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createConfession\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"TitleField\",\n          maxLength: \"250\",\n          placeholder: \"Spice your confession!\",\n          onChange: e => {\n            GetTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CKEditor, {\n        className: \"ContentField\",\n        editor: Editor,\n        data: content,\n        config: editorConfiguration,\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          GetContent(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Crime scene:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"LocationField\",\n          maxLength: \"150\",\n          placeholder: \"Where did it take place?\",\n          onChange: event => {\n            GetLocation(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"SelectField\",\n      defaultValue: timer,\n      onChange: GetTimer,\n      options: TimerOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"SelectField\",\n      defaultValue: Tag,\n      onChange: GetTag,\n      isMulti: true,\n      options: TagOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"DraftBtn\",\n      onClick: () => {\n        postConfession(1);\n      },\n      children: \"Save to Draft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"PublishBtn\",\n      onClick: () => {\n        postConfession(0);\n      },\n      children: \"Publish Confession\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: PublishStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CreateConfession, \"5o+RTYkXcz5kreNdom+WIXX7EII=\");\n\n_c = CreateConfession;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateConfession\");","map":{"version":3,"sources":["C:/Users/Fernando Winardi/Downloads/ConHut/frontend/src/components/CreateConfession/CreateConfession.js"],"names":["React","useState","Axios","TagOption","TimerOption","CKEditor","Select","Editor","CreateConfession","title","GetTitle","content","GetContent","location","GetLocation","timer","GetTimer","Tag","GetTag","PublishStatus","GetPublishStatus","editorConfiguration","placeholder","toolbar","postConfession","draft","usertimer","tagarray","value","undefined","i","length","label","push","post","tag","then","response","console","log","data","message","e","target","event","editor","getData"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport TagOption from '../../GlobalVar/TagOption';\r\nimport TimerOption from '../../GlobalVar/TimerOption';\r\nimport './CreateConfession.css'\r\n\r\n// create confession\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Select from 'react-select';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\n\r\nexport default function CreateConfession() {\r\n\r\n    const [title, GetTitle] = useState('')\r\n    const [content, GetContent] = useState('')\r\n    const [location, GetLocation] = useState('')\r\n    const [timer, GetTimer] = useState('0')\r\n    const [Tag, GetTag] = useState([])\r\n    const [PublishStatus, GetPublishStatus] = useState('')\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your confession here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const postConfession = (draft) => {\r\n        let usertimer = 0\r\n        var tagarray = []\r\n        if (draft === 0) {\r\n            if (timer.value !== undefined) {\r\n                usertimer = timer.value\r\n            }\r\n\r\n            for (var i = 0; i < Tag.length; i++) {\r\n                delete Tag[i].label\r\n                tagarray.push(Tag[i].value)\r\n            } \r\n\r\n            if (location === \"\" || content === \"\" || title === \"\" || usertimer === 0 || tagarray.length === 0) {\r\n                GetPublishStatus(\"We cannot publish your confession while some of the field is empty!\")\r\n                return\r\n            } \r\n\r\n        } else if (draft === 1) {\r\n            if (title === \"\") {\r\n                GetPublishStatus(\"Add a title before saving to draft!\")\r\n                return\r\n            }\r\n        } \r\n\r\n        Axios.post(\"http://localhost:3001/confession/create\", {\r\n            location: location,\r\n            content: content,\r\n            title: title,\r\n            timer: usertimer,\r\n            tag: tagarray,\r\n            draft: draft,\r\n        }).then((response) => {\r\n            console.log(response.data.message)\r\n            GetPublishStatus(response.data.message)\r\n        })\r\n\r\n        \r\n    }\r\n    return (\r\n            <div className=\"createConfession\">\r\n                <div>\r\n                    <label> Title:\r\n                        <input \r\n                        className = \"TitleField\"\r\n                        maxLength = \"250\"\r\n                        placeholder=\"Spice your confession!\"\r\n                        onChange={(e) => {\r\n                            GetTitle(e.target.value);\r\n                        }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <CKEditor\r\n                        className = \"ContentField\"\r\n                        editor = { Editor }\r\n                        data = {content}\r\n                        config = {editorConfiguration}\r\n                        onChange = {(event, editor) => {\r\n                            const data = editor.getData()\r\n                            GetContent(data);\r\n                        }}                       \r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label> Crime scene:\r\n                        <input\r\n                        className = \"LocationField\" \r\n                        maxLength = \"150\"\r\n                        placeholder=\"Where did it take place?\"\r\n                        onChange={(event) => {\r\n                            GetLocation(event.target.value);\r\n                        }}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <Select\r\n                    className = \"SelectField\"\r\n                    defaultValue = {timer}\r\n                    onChange = {GetTimer}\r\n                    options = {TimerOption}/>\r\n                <Select\r\n                    className = \"SelectField\"\r\n                    defaultValue = {Tag}\r\n                    onChange = {GetTag}\r\n                    isMulti\r\n                    options = {TagOption}/>\r\n                <button className=\"DraftBtn\" onClick={() => {postConfession(1)}}>Save to Draft</button>\r\n                <button className=\"PublishBtn\" onClick={() => {postConfession(0)}}>Publish Confession</button>\r\n                <p>{PublishStatus}</p>\r\n        </div>\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}