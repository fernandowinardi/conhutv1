{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ConHut\\\\frontend\\\\src\\\\pages\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport RSNav from '../../components/RightSideNav/RSNav';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Modal from \"react-responsive-modal\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport parse from 'html-react-parser';\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"./HomePage.css\";\nexport default function HomePage() {\n  _s();\n\n  const history = useHistory();\n  const [confessionList, GetConfessionList] = useState([]);\n  const [CommentMode, SetCommentMode] = useState(false);\n  const [CCMode, SetCCMode] = useState(false); // comment comment\n\n  const [confirmationMode, SetConfirmation] = useState(false);\n  const [CommentList, GetCommentList] = useState([]);\n  const [comment, GetComment] = useState(\"\");\n  const [CC, GetCC] = useState(\"\");\n  const [CCList, GetCCList] = useState([]);\n  const [CCcontent, SetCCcontent] = useState(\"\");\n  const [CCowner, SetCCowner] = useState(\"\");\n  const [LikedList, GetLikedList] = useState([]);\n  const [usertag, GetUserTag] = useState(\"\");\n  const [usertype, GetUserType] = useState(\"\");\n  const editorConfiguration = {\n    placeholder: \"Type your comment here...\",\n    toolbar: [\"bold\", \"italic\", \"underline\"]\n  };\n\n  const likeConfession = conID => {\n    Axios.post(\"http://localhost:3001/confession/like\", {\n      confessid: conID\n    });\n    window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\n  };\n\n  const openConfirmation = () => {\n    SetConfirmation(true);\n  };\n\n  const closeConfirmation = () => {\n    SetConfirmation(false);\n  };\n\n  const getComment = con_ID => {\n    SetCommentMode(true);\n    Axios.post(\"http://localhost:3001/confession/comment/get\", {\n      confessid: con_ID\n    }).then(response => {\n      GetCommentList(response.data);\n    });\n  };\n\n  const postcomment = () => {\n    Axios.post(\"http://localhost:3001/confession/comment/post\", {\n      content: comment\n    }).then(response => {\n      if (response.data.message) {\n        GetComment(\"\");\n        SetCommentMode(false);\n        window.location.reload();\n      }\n    });\n  };\n\n  const closemodal = () => {\n    SetCommentMode(false);\n    SetCCMode(false);\n  };\n\n  const clicktag = tag => {\n    Axios.post(\"http://localhost:3001/tag/store\", {\n      clicktag: tag\n    });\n    history.push(`/search/${tag}`);\n    window.location.reload();\n  };\n\n  const deleteconfession = conID => {\n    Axios.delete(`http://localhost:3001/confession/delete/${conID}`);\n    window.location.reload();\n  };\n\n  const commentcomment = (comID, content, owner) => {\n    SetCCMode(true);\n    SetCCowner(owner);\n    SetCCcontent(content);\n    Axios.post(\"http://localhost:3001/confession/comment/comment/get\", {\n      commentID: comID\n    }).then(response => {\n      if (response.data) {\n        GetCCList(response.data);\n      }\n    });\n  };\n\n  const postcc = () => {\n    Axios.post(\"http://localhost:3001/confession/comment/comment/post\", {\n      content: CC\n    }).then(response => {\n      if (response.data.message) {\n        GetCC(\"\");\n        SetCommentMode(false);\n        window.location.reload();\n      }\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getaccount\").then(result => {\n      if (result.data.loggedIn === true) {\n        GetUserTag(result.data.user[0].anontag);\n        GetUserType(result.data.user[0].usertype);\n        Axios.get(\"http://localhost:3001/confession/publish/getall\").then(response => {\n          if (response.data) {\n            GetConfessionList(response.data);\n          }\n        });\n        Axios.get(\"http://localhost:3001/confession/likes/compare\").then(result => {\n          if (result.data) {\n            GetLikedList(result.data[0].liked_confession);\n          }\n        });\n      } else {\n        history.push(\"/\");\n      }\n    });\n  }, []); // remove the , [] later on \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HomePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBarDiv\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"homeHeader\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), confessionList.map(val => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"displayCard\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessOwner\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"owner\",\n                  children: [\"Confessed by: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: val.confess_owner\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessLocation\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Happened at: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"location\",\n                    children: val.confess_location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessTime\",\n                children: [\"Posted at: \", val.date_published.substring(0, 10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessTitle\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"title\",\n                  children: [val.confess_title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessContent\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: parse(val.confess_content)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"like-area\",\n                children: [LikedList.includes(val.confess_id) === false && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-heart liked\",\n                  onClick: () => likeConfession(val.confess_id),\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 86\n                }, this), LikedList.includes(val.confess_id) === true && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-heart unliked\",\n                  onClick: () => likeConfession(val.confess_id),\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 85\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\" \", val.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-area\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-comment\",\n                  onClick: () => getComment(val.confess_id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\" \", val.comnum]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confessTags\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Tags: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this), val.confess_tag.map(value => {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"tag-btn\",\n                    onClick: () => clicktag(value),\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), (usertag === val.confess_owner === true || usertype === \"admin\") && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash\",\n                onClick: openConfirmation,\n                children: \" Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 103\n              }, this), confirmationMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Modal, {\n                  open: true,\n                  onClose: closeConfirmation,\n                  showCloseIcon: false,\n                  classNames: {\n                    overlay: 'customOverlay',\n                    modal: 'customModal'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"deleteContainer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Are you sure you want to delete your confession?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"deleteBtn\",\n                      onClick: () => deleteconfession(val.confess_id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"deleteCancelBtn\",\n                      onClick: closeConfirmation,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 63\n              }, this), CommentMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Modal, {\n                  open: true,\n                  onClose: closemodal,\n                  showCloseIcon: false,\n                  classNames: {\n                    overlay: 'customOverlay3',\n                    modal: 'customModal3'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n                    editor: Editor,\n                    data: \"\",\n                    config: editorConfiguration,\n                    onChange: (event, editor) => {\n                      const data = editor.getData();\n                      GetComment(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"commentBtn\",\n                    onClick: postcomment,\n                    children: \"Enter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"all-comments\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Comments:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 45\n                    }, this), CommentList.map(value => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"commentOwner\",\n                            children: [value.comment_owner, \" said:\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 235,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                            onClick: () => commentcomment(value.comment_id, value.comment_content, value.comment_owner),\n                            children: \"Reply...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"commentContent\",\n                          children: parse(value.comment_content)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 58\n              }, this), CCMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Modal, {\n                  open: true,\n                  onClose: closemodal,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"commentOwner\",\n                      children: [\"Replying to \", /*#__PURE__*/_jsxDEV(\"u\", {\n                        children: [CCowner, \"'s\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 89\n                      }, this), \" comment:\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"commentContent\",\n                      children: parse(CCcontent)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n                      editor: Editor,\n                      data: \"\",\n                      config: editorConfiguration,\n                      onChange: (event, editor) => {\n                        const data = editor.getData();\n                        GetCC(data);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"commentBtn\",\n                      onClick: postcomment,\n                      children: \"Enter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightNav\",\n        children: /*#__PURE__*/_jsxDEV(RSNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"EGpxrNd7QhuuKv/H1BE8ZhkYBb8=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/ConHut/frontend/src/pages/HomePage/HomePage.js"],"names":["React","useEffect","useState","NavBar","RSNav","Axios","useHistory","Modal","CKEditor","Editor","parse","HomePage","history","confessionList","GetConfessionList","CommentMode","SetCommentMode","CCMode","SetCCMode","confirmationMode","SetConfirmation","CommentList","GetCommentList","comment","GetComment","CC","GetCC","CCList","GetCCList","CCcontent","SetCCcontent","CCowner","SetCCowner","LikedList","GetLikedList","usertag","GetUserTag","usertype","GetUserType","editorConfiguration","placeholder","toolbar","likeConfession","conID","post","confessid","window","location","reload","openConfirmation","closeConfirmation","getComment","con_ID","then","response","data","postcomment","content","message","closemodal","clicktag","tag","push","deleteconfession","delete","commentcomment","comID","owner","commentID","postcc","get","result","loggedIn","user","anontag","liked_confession","map","val","confess_owner","confess_location","date_published","substring","confess_title","confess_content","includes","confess_id","likes","comnum","confess_tag","value","overlay","modal","event","editor","getData","comment_owner","comment_id","comment_content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport RSNav from '../../components/RightSideNav/RSNav'\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Modal from \"react-responsive-modal\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport parse from 'html-react-parser';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport \"./HomePage.css\"\r\n\r\nexport default function HomePage() {\r\n    const history = useHistory();\r\n\r\n    const [confessionList, GetConfessionList] = useState([])\r\n    const [CommentMode, SetCommentMode] = useState(false)\r\n    const [CCMode, SetCCMode] = useState(false) // comment comment\r\n    const [confirmationMode, SetConfirmation] = useState(false)\r\n    const [CommentList, GetCommentList] = useState([])\r\n    const [comment, GetComment] = useState(\"\")\r\n    const [CC, GetCC] = useState(\"\")\r\n    const [CCList, GetCCList] = useState([])\r\n    const [CCcontent, SetCCcontent] = useState(\"\")\r\n    const [CCowner, SetCCowner] = useState(\"\")\r\n    const [LikedList, GetLikedList] = useState([])\r\n    const [usertag, GetUserTag] = useState(\"\")\r\n    const [usertype, GetUserType] = useState(\"\")\r\n\r\n    const editorConfiguration = {\r\n        placeholder: \"Type your comment here...\",\r\n        toolbar: [\"bold\", \"italic\", \"underline\"]\r\n    }\r\n\r\n    const likeConfession = (conID) => {\r\n        Axios.post(\"http://localhost:3001/confession/like\", {\r\n            confessid: conID\r\n        })\r\n        window.location.reload(); // remove this if want to use useeffect that remove , [] (testing)\r\n    }\r\n\r\n    const openConfirmation = () => {\r\n        SetConfirmation(true)\r\n    }\r\n\r\n    const closeConfirmation = () => {\r\n        SetConfirmation(false)\r\n    }\r\n\r\n    const getComment = (con_ID) => {\r\n        SetCommentMode(true)\r\n        Axios.post(\"http://localhost:3001/confession/comment/get\", {\r\n            confessid: con_ID\r\n        }).then((response) => {\r\n            GetCommentList(response.data)\r\n        })\r\n    }\r\n\r\n    const postcomment = () => {\r\n        Axios.post(\"http://localhost:3001/confession/comment/post\", {\r\n            content: comment\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetComment(\"\")\r\n                SetCommentMode(false)\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    const closemodal = () => {\r\n        SetCommentMode(false)\r\n        SetCCMode(false)\r\n    }\r\n\r\n    const clicktag = (tag) => {\r\n        Axios.post(\"http://localhost:3001/tag/store\", {\r\n            clicktag: tag\r\n        })\r\n        history.push(`/search/${tag}`)\r\n        window.location.reload();\r\n    }\r\n\r\n    const deleteconfession = (conID) => {\r\n        Axios.delete(`http://localhost:3001/confession/delete/${conID}`)\r\n        window.location.reload();\r\n    }\r\n\r\n    const commentcomment = (comID, content, owner) => {\r\n        SetCCMode(true);\r\n        SetCCowner(owner)\r\n        SetCCcontent(content)\r\n        Axios.post(\"http://localhost:3001/confession/comment/comment/get\", {\r\n            commentID: comID\r\n        }).then((response) => {\r\n            if (response.data) {\r\n                GetCCList(response.data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const postcc = () => {\r\n        Axios.post(\"http://localhost:3001/confession/comment/comment/post\", {\r\n            content: CC\r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                GetCC(\"\")\r\n                SetCommentMode(false)\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/getaccount\").then((result) => {\r\n            if (result.data.loggedIn === true) {\r\n                GetUserTag(result.data.user[0].anontag)\r\n                GetUserType(result.data.user[0].usertype)\r\n                Axios.get(\"http://localhost:3001/confession/publish/getall\").then((response) => {\r\n                    if (response.data) {\r\n                        GetConfessionList(response.data)\r\n                    }\r\n                })\r\n                Axios.get(\"http://localhost:3001/confession/likes/compare\").then((result) => {\r\n                    if (result.data) {\r\n                        GetLikedList(result.data[0].liked_confession)\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                history.push(\"/\")\r\n            }\r\n        });\r\n    }, []); // remove the , [] later on \r\n    \r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"navBarDiv\">\r\n                <NavBar/>\r\n            </div>\r\n            <div className=\"mainContainer\">\r\n                <div className=\"homepageContainer\">\r\n                \r\n                    <div className=\"homeHeader\">\r\n                        <h1>Home</h1>\r\n                    </div>\r\n                \r\n                \r\n                    {confessionList.map((val) => {\r\n                        return (\r\n                            <>\r\n                            <div className=\"displayCard\">\r\n                                <div className=\"confessOwner\">\r\n                                    <label className=\"owner\">Confessed by: <b>{val.confess_owner}</b></label>\r\n                                </div>\r\n\r\n                                <div className=\"confessLocation\">\r\n                                    <label>Happened at: <a className=\"location\">{val.confess_location}</a></label>                               \r\n                                </div>\r\n\r\n                                <div className=\"confessTime\">\r\n                                    Posted at: {val.date_published.substring(0,10)}\r\n                                </div>\r\n\r\n                                <div className=\"confessTitle\">\r\n                                    <label className=\"title\">{val.confess_title} </label>\r\n                                    \r\n                                </div>\r\n                                \r\n                                <div className=\"confessContent\">\r\n                                    <p>{parse(val.confess_content)}</p>\r\n                                </div>\r\n\r\n                                <div className=\"like-area\">\r\n                                    {LikedList.includes(val.confess_id) === false && <i className=\"fa fa-heart liked\" onClick={() => likeConfession(val.confess_id)}> </i>}\r\n                                    {LikedList.includes(val.confess_id) === true && <i className=\"fa fa-heart unliked\" onClick={() => likeConfession(val.confess_id)}> </i>}\r\n                                    <label> {val.likes}</label>\r\n                                </div>\r\n\r\n                                <div className=\"comment-area\">\r\n                                    <i className=\"fa fa-comment\" onClick={() => getComment(val.confess_id)}></i>\r\n                                    <label> {val.comnum}</label>\r\n                                </div>\r\n\r\n                                <div className=\"block1\"></div>\r\n\r\n                                <div className=\"confessTags\">\r\n                                    <label>Tags: </label>\r\n                                    {val.confess_tag.map((value) => {\r\n                                        return(\r\n                                            <button className=\"tag-btn\" onClick={() => clicktag(value)}>{value}</button>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n\r\n                                {((usertag === val.confess_owner) === true || usertype === \"admin\")&& <i className=\"fa fa-trash\" onClick={openConfirmation}> Delete</i>}\r\n                                {confirmationMode === true && <div>\r\n                                    <Modal open={true} onClose={closeConfirmation} showCloseIcon={false} classNames={{\r\n                                        overlay: 'customOverlay',\r\n                                        modal: 'customModal'\r\n                                    }}>\r\n                                        <div className=\"deleteContainer\">\r\n                                            <p>Are you sure you want to delete your confession?</p>\r\n                                            <button className=\"deleteBtn\" onClick={() => deleteconfession(val.confess_id)}>Delete</button>\r\n                                            <button className=\"deleteCancelBtn\" onClick={closeConfirmation}>Cancel</button>\r\n                                        </div>\r\n                                        \r\n                                    </Modal>\r\n\r\n                                    </div>} \r\n\r\n                                {CommentMode === true && <div>\r\n                                    <Modal open={true} onClose={closemodal} showCloseIcon={false}classNames={{\r\n                                        overlay: 'customOverlay3',\r\n                                        modal: 'customModal3',\r\n                                    }}>\r\n                                        <CKEditor\r\n                                            editor = { Editor }\r\n                                            data = \"\"\r\n                                            config = {editorConfiguration}\r\n                                            onChange = {(event, editor) => {\r\n                                                const data = editor.getData()\r\n                                                GetComment(data);\r\n                                            }}                       \r\n                                        />\r\n                                        <button className=\"commentBtn\" onClick={postcomment}>Enter</button> \r\n                                        <div className=\"all-comments\">\r\n                                            <h3>Comments:</h3>\r\n                                            {CommentList.map((value) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <div>\r\n                                                            <label className=\"commentOwner\">{value.comment_owner} said:</label>\r\n                                                            <a onClick={() => commentcomment(value.comment_id, value.comment_content, value.comment_owner)}>Reply...</a>\r\n                                                        </div>\r\n                                                        <p className=\"commentContent\">{parse(value.comment_content)}</p>\r\n                                                        <hr></hr>\r\n                                                    </>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </Modal>\r\n                                </div>}\r\n                                {CCMode === true && <div>\r\n                                    <Modal open={true} onClose={closemodal}>\r\n                                        <div>\r\n                                            <label className=\"commentOwner\">Replying to <u>{CCowner}'s</u> comment:</label>\r\n                                            <p className=\"commentContent\">{parse(CCcontent)}</p>\r\n                                            <hr></hr>\r\n                                        </div>\r\n                                        <div>\r\n                                            <CKEditor\r\n                                                editor = { Editor }\r\n                                                data = \"\"\r\n                                                config = {editorConfiguration}\r\n                                                onChange = {(event, editor) => {\r\n                                                    const data = editor.getData()\r\n                                                    GetCC(data);\r\n                                                }}    \r\n                                            />\r\n                                            <button className=\"commentBtn\" onClick={postcomment}>Enter</button>\r\n                                        </div>\r\n                                    </Modal>\r\n                                </div>}\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"rightNav\">\r\n                    <RSNav/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}